// <auto-generated />
using Data.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Data.Persistance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Data.Domain.Entities.RouteNode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ArrivalTime");

                    b.Property<long>("DepartureTime");

                    b.Property<int>("DestinationStationCode");

                    b.Property<string>("DestinationStationName");

                    b.Property<int>("Km");

                    b.Property<string>("Name");

                    b.Property<int>("OfficialCode");

                    b.Property<int>("OriginStationCode");

                    b.Property<string>("OriginStationName");

                    b.Property<int>("Standing");

                    b.Property<Guid>("TrainId");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("RouteNodes");
                });

            modelBuilder.Entity("Data.Domain.Entities.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("OfficialCode");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Data.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<int>("Bike");

                    b.Property<int>("Car");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<Guid>("DestinationStationId");

                    b.Property<int>("Duration");

                    b.Property<int>("Km");

                    b.Property<Guid>("OriginStationId");

                    b.Property<int>("Pet");

                    b.Property<int>("Price");

                    b.Property<int>("Seat");

                    b.Property<Guid>("TrainId");

                    b.Property<string>("Type");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Data.Domain.Entities.Train", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<int>("CumulatedKm");

                    b.Property<int>("DestinationStationCode");

                    b.Property<int>("Length");

                    b.Property<string>("OfficialNumber");

                    b.Property<int>("OperatorCode");

                    b.Property<int>("OriginStationCode");

                    b.Property<int>("OwnerCode");

                    b.Property<int>("Rank");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Data.Domain.Entities.RouteNode", b =>
                {
                    b.HasOne("Data.Domain.Entities.Train")
                        .WithMany("RouteNodes")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
