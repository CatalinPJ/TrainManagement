Å¬
TC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\AccountController.cs
	namespace 	
Presentation
 
. 
Controllers "
{ 
[ 
	Authorize 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
AccountController "
:# $

Controller% /
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
SignInManager &
<& '
ApplicationUser' 6
>6 7
_signInManager8 F
;F G
private 
readonly 
IEmailSender %
_emailSender& 2
;2 3
private 
readonly 
ILogger  
_logger! (
;( )
public 
AccountController  
(  !
UserManager 
< 
ApplicationUser '
>' (
userManager) 4
,4 5
SignInManager 
< 
ApplicationUser )
>) *
signInManager+ 8
,8 9
IEmailSender 
emailSender $
,$ %
ILogger   
<   
AccountController   %
>  % &
logger  ' -
)  - .
{!! 	
_userManager"" 
="" 
userManager"" &
;""& '
_signInManager## 
=## 
signInManager## *
;##* +
_emailSender$$ 
=$$ 
emailSender$$ &
;$$& '
_logger%% 
=%% 
logger%% 
;%% 
}&& 	
[(( 	
TempData((	 
](( 
public)) 
string)) 
ErrorMessage)) "
{))# $
get))% (
;))( )
set))* -
;))- .
}))/ 0
[++ 	
HttpGet++	 
]++ 
[,, 	
AllowAnonymous,,	 
],, 
public-- 
async-- 
Task-- 
<-- 
IActionResult-- '
>--' (
Login--) .
(--. /
string--/ 5
	returnUrl--6 ?
=--@ A
null--B F
)--F G
{.. 	
await00 
HttpContext00 
.00 
SignOutAsync00 *
(00* +
IdentityConstants00+ <
.00< =
ExternalScheme00= K
)00K L
;00L M
ViewData22 
[22 
$str22  
]22  !
=22" #
	returnUrl22$ -
;22- .
return33 
View33 
(33 
)33 
;33 
}44 	
[66 	
HttpPost66	 
]66 
[77 	
AllowAnonymous77	 
]77 
[88 	$
ValidateAntiForgeryToken88	 !
]88! "
public99 
async99 
Task99 
<99 
IActionResult99 '
>99' (
Login99) .
(99. /
LoginViewModel99/ =
model99> C
,99C D
string99E K
	returnUrl99L U
=99V W
null99X \
)99\ ]
{:: 	
ViewData;; 
[;; 
$str;;  
];;  !
=;;" #
	returnUrl;;$ -
;;;- .
if<< 
(<< 

ModelState<< 
.<< 
IsValid<< "
)<<" #
{== 
var@@ 
result@@ 
=@@ 
await@@ "
_signInManager@@# 1
.@@1 2
PasswordSignInAsync@@2 E
(@@E F
model@@F K
.@@K L
Email@@L Q
,@@Q R
model@@S X
.@@X Y
Password@@Y a
,@@a b
model@@c h
.@@h i

RememberMe@@i s
,@@s t
lockoutOnFailure	@@u Ö
:
@@Ö Ü
false
@@á å
)
@@å ç
;
@@ç é
ifAA 
(AA 
resultAA 
.AA 
	SucceededAA $
)AA$ %
{BB 
_loggerCC 
.CC 
LogInformationCC *
(CC* +
$strCC+ <
)CC< =
;CC= >
returnDD 
RedirectToLocalDD *
(DD* +
	returnUrlDD+ 4
)DD4 5
;DD5 6
}EE 
ifFF 
(FF 
resultFF 
.FF 
RequiresTwoFactorFF ,
)FF, -
{GG 
returnHH 
RedirectToActionHH +
(HH+ ,
nameofHH, 2
(HH2 3
LoginWith2faHH3 ?
)HH? @
,HH@ A
newHHB E
{HHF G
	returnUrlHHH Q
,HHQ R
modelHHS X
.HHX Y

RememberMeHHY c
}HHd e
)HHe f
;HHf g
}II 
ifJJ 
(JJ 
resultJJ 
.JJ 
IsLockedOutJJ &
)JJ& '
{KK 
_loggerLL 
.LL 

LogWarningLL &
(LL& '
$strLL' A
)LLA B
;LLB C
returnMM 
RedirectToActionMM +
(MM+ ,
nameofMM, 2
(MM2 3
LockoutMM3 :
)MM: ;
)MM; <
;MM< =
}NN 
elseOO 
{PP 

ModelStateQQ 
.QQ 
AddModelErrorQQ ,
(QQ, -
stringQQ- 3
.QQ3 4
EmptyQQ4 9
,QQ9 :
$strQQ; S
)QQS T
;QQT U
returnRR 
ViewRR 
(RR  
modelRR  %
)RR% &
;RR& '
}SS 
}TT 
returnWW 
ViewWW 
(WW 
modelWW 
)WW 
;WW 
}XX 	
[ZZ 	
HttpGetZZ	 
]ZZ 
[[[ 	
AllowAnonymous[[	 
][[ 
public\\ 
async\\ 
Task\\ 
<\\ 
IActionResult\\ '
>\\' (
LoginWith2fa\\) 5
(\\5 6
bool\\6 :

rememberMe\\; E
,\\E F
string\\G M
	returnUrl\\N W
=\\X Y
null\\Z ^
)\\^ _
{]] 	
var__ 
user__ 
=__ 
await__ 
_signInManager__ +
.__+ ,/
#GetTwoFactorAuthenticationUserAsync__, O
(__O P
)__P Q
;__Q R
ifaa 
(aa 
useraa 
==aa 
nullaa 
)aa 
{bb 
throwcc 
newcc  
ApplicationExceptioncc .
(cc. /
$"cc/ 1:
.Unable to load two-factor authentication user.cc1 _
"cc_ `
)cc` a
;cca b
}dd 
varff 
modelff 
=ff 
newff !
LoginWith2faViewModelff 1
{ff2 3

RememberMeff4 >
=ff? @

rememberMeffA K
}ffL M
;ffM N
ViewDatagg 
[gg 
$strgg  
]gg  !
=gg" #
	returnUrlgg$ -
;gg- .
returnii 
Viewii 
(ii 
modelii 
)ii 
;ii 
}jj 	
[ll 	
HttpPostll	 
]ll 
[mm 	
AllowAnonymousmm	 
]mm 
[nn 	$
ValidateAntiForgeryTokennn	 !
]nn! "
publicoo 
asyncoo 
Taskoo 
<oo 
IActionResultoo '
>oo' (
LoginWith2faoo) 5
(oo5 6!
LoginWith2faViewModeloo6 K
modelooL Q
,ooQ R
boolooS W

rememberMeooX b
,oob c
stringood j
	returnUrlook t
=oou v
nulloow {
)oo{ |
{pp 	
ifqq 
(qq 
!qq 

ModelStateqq 
.qq 
IsValidqq #
)qq# $
{rr 
returnss 
Viewss 
(ss 
modelss !
)ss! "
;ss" #
}tt 
varvv 
uservv 
=vv 
awaitvv 
_signInManagervv +
.vv+ ,/
#GetTwoFactorAuthenticationUserAsyncvv, O
(vvO P
)vvP Q
;vvQ R
ifww 
(ww 
userww 
==ww 
nullww 
)ww 
{xx 
throwyy 
newyy  
ApplicationExceptionyy .
(yy. /
$"yy/ 1)
Unable to load user with ID 'yy1 N
{yyN O
_userManageryyO [
.yy[ \
	GetUserIdyy\ e
(yye f
Useryyf j
)yyj k
}yyk l
'.yyl n
"yyn o
)yyo p
;yyp q
}zz 
var|| 
authenticatorCode|| !
=||" #
model||$ )
.||) *
TwoFactorCode||* 7
.||7 8
Replace||8 ?
(||? @
$str||@ C
,||C D
string||E K
.||K L
Empty||L Q
)||Q R
.||R S
Replace||S Z
(||Z [
$str||[ ^
,||^ _
string||` f
.||f g
Empty||g l
)||l m
;||m n
var~~ 
result~~ 
=~~ 
await~~ 
_signInManager~~ -
.~~- .-
!TwoFactorAuthenticatorSignInAsync~~. O
(~~O P
authenticatorCode~~P a
,~~a b

rememberMe~~c m
,~~m n
model~~o t
.~~t u
RememberMachine	~~u Ñ
)
~~Ñ Ö
;
~~Ö Ü
if
ÄÄ 
(
ÄÄ 
result
ÄÄ 
.
ÄÄ 
	Succeeded
ÄÄ  
)
ÄÄ  !
{
ÅÅ 
_logger
ÇÇ 
.
ÇÇ 
LogInformation
ÇÇ &
(
ÇÇ& '
$str
ÇÇ' R
,
ÇÇR S
user
ÇÇT X
.
ÇÇX Y
Id
ÇÇY [
)
ÇÇ[ \
;
ÇÇ\ ]
return
ÉÉ 
RedirectToLocal
ÉÉ &
(
ÉÉ& '
	returnUrl
ÉÉ' 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
result
ÖÖ 
.
ÖÖ 
IsLockedOut
ÖÖ '
)
ÖÖ' (
{
ÜÜ 
_logger
áá 
.
áá 

LogWarning
áá "
(
áá" #
$str
áá# N
,
ááN O
user
ááP T
.
ááT U
Id
ááU W
)
ááW X
;
ááX Y
return
àà 
RedirectToAction
àà '
(
àà' (
nameof
àà( .
(
àà. /
Lockout
àà/ 6
)
àà6 7
)
àà7 8
;
àà8 9
}
ââ 
else
ää 
{
ãã 
_logger
åå 
.
åå 

LogWarning
åå "
(
åå" #
$str
åå# b
,
ååb c
user
ååd h
.
ååh i
Id
ååi k
)
ååk l
;
åål m

ModelState
çç 
.
çç 
AddModelError
çç (
(
çç( )
string
çç) /
.
çç/ 0
Empty
çç0 5
,
çç5 6
$str
çç7 T
)
ççT U
;
ççU V
return
éé 
View
éé 
(
éé 
)
éé 
;
éé 
}
èè 
}
êê 	
[
íí 	
HttpGet
íí	 
]
íí 
[
ìì 	
AllowAnonymous
ìì	 
]
ìì 
public
îî 
async
îî 
Task
îî 
<
îî 
IActionResult
îî '
>
îî' (#
LoginWithRecoveryCode
îî) >
(
îî> ?
string
îî? E
	returnUrl
îîF O
=
îîP Q
null
îîR V
)
îîV W
{
ïï 	
var
óó 
user
óó 
=
óó 
await
óó 
_signInManager
óó +
.
óó+ ,1
#GetTwoFactorAuthenticationUserAsync
óó, O
(
óóO P
)
óóP Q
;
óóQ R
if
òò 
(
òò 
user
òò 
==
òò 
null
òò 
)
òò 
{
ôô 
throw
öö 
new
öö "
ApplicationException
öö .
(
öö. /
$"
öö/ 1<
.Unable to load two-factor authentication user.
öö1 _
"
öö_ `
)
öö` a
;
ööa b
}
õõ 
ViewData
ùù 
[
ùù 
$str
ùù  
]
ùù  !
=
ùù" #
	returnUrl
ùù$ -
;
ùù- .
return
üü 
View
üü 
(
üü 
)
üü 
;
üü 
}
†† 	
[
¢¢ 	
HttpPost
¢¢	 
]
¢¢ 
[
££ 	
AllowAnonymous
££	 
]
££ 
[
§§ 	&
ValidateAntiForgeryToken
§§	 !
]
§§! "
public
•• 
async
•• 
Task
•• 
<
•• 
IActionResult
•• '
>
••' (#
LoginWithRecoveryCode
••) >
(
••> ?,
LoginWithRecoveryCodeViewModel
••? ]
model
••^ c
,
••c d
string
••e k
	returnUrl
••l u
=
••v w
null
••x |
)
••| }
{
¶¶ 	
if
ßß 
(
ßß 
!
ßß 

ModelState
ßß 
.
ßß 
IsValid
ßß #
)
ßß# $
{
®® 
return
©© 
View
©© 
(
©© 
model
©© !
)
©©! "
;
©©" #
}
™™ 
var
¨¨ 
user
¨¨ 
=
¨¨ 
await
¨¨ 
_signInManager
¨¨ +
.
¨¨+ ,1
#GetTwoFactorAuthenticationUserAsync
¨¨, O
(
¨¨O P
)
¨¨P Q
;
¨¨Q R
if
≠≠ 
(
≠≠ 
user
≠≠ 
==
≠≠ 
null
≠≠ 
)
≠≠ 
{
ÆÆ 
throw
ØØ 
new
ØØ "
ApplicationException
ØØ .
(
ØØ. /
$"
ØØ/ 1<
.Unable to load two-factor authentication user.
ØØ1 _
"
ØØ_ `
)
ØØ` a
;
ØØa b
}
∞∞ 
var
≤≤ 
recoveryCode
≤≤ 
=
≤≤ 
model
≤≤ $
.
≤≤$ %
RecoveryCode
≤≤% 1
.
≤≤1 2
Replace
≤≤2 9
(
≤≤9 :
$str
≤≤: =
,
≤≤= >
string
≤≤? E
.
≤≤E F
Empty
≤≤F K
)
≤≤K L
;
≤≤L M
var
¥¥ 
result
¥¥ 
=
¥¥ 
await
¥¥ 
_signInManager
¥¥ -
.
¥¥- ..
 TwoFactorRecoveryCodeSignInAsync
¥¥. N
(
¥¥N O
recoveryCode
¥¥O [
)
¥¥[ \
;
¥¥\ ]
if
∂∂ 
(
∂∂ 
result
∂∂ 
.
∂∂ 
	Succeeded
∂∂  
)
∂∂  !
{
∑∑ 
_logger
∏∏ 
.
∏∏ 
LogInformation
∏∏ &
(
∏∏& '
$str
∏∏' ^
,
∏∏^ _
user
∏∏` d
.
∏∏d e
Id
∏∏e g
)
∏∏g h
;
∏∏h i
return
ππ 
RedirectToLocal
ππ &
(
ππ& '
	returnUrl
ππ' 0
)
ππ0 1
;
ππ1 2
}
∫∫ 
if
ªª 
(
ªª 
result
ªª 
.
ªª 
IsLockedOut
ªª "
)
ªª" #
{
ºº 
_logger
ΩΩ 
.
ΩΩ 

LogWarning
ΩΩ "
(
ΩΩ" #
$str
ΩΩ# N
,
ΩΩN O
user
ΩΩP T
.
ΩΩT U
Id
ΩΩU W
)
ΩΩW X
;
ΩΩX Y
return
ææ 
RedirectToAction
ææ '
(
ææ' (
nameof
ææ( .
(
ææ. /
Lockout
ææ/ 6
)
ææ6 7
)
ææ7 8
;
ææ8 9
}
øø 
else
¿¿ 
{
¡¡ 
_logger
¬¬ 
.
¬¬ 

LogWarning
¬¬ "
(
¬¬" #
$str
¬¬# \
,
¬¬\ ]
user
¬¬^ b
.
¬¬b c
Id
¬¬c e
)
¬¬e f
;
¬¬f g

ModelState
√√ 
.
√√ 
AddModelError
√√ (
(
√√( )
string
√√) /
.
√√/ 0
Empty
√√0 5
,
√√5 6
$str
√√7 W
)
√√W X
;
√√X Y
return
ƒƒ 
View
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
}
≈≈ 
}
∆∆ 	
[
»» 	
HttpGet
»»	 
]
»» 
[
…… 	
AllowAnonymous
……	 
]
…… 
public
   
IActionResult
   
Lockout
   $
(
  $ %
)
  % &
{
ÀÀ 	
return
ÃÃ 
View
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
[
œœ 	
HttpGet
œœ	 
]
œœ 
[
–– 	
AllowAnonymous
––	 
]
–– 
public
—— 
IActionResult
—— 
Register
—— %
(
——% &
string
——& ,
	returnUrl
——- 6
=
——7 8
null
——9 =
)
——= >
{
““ 	
ViewData
”” 
[
”” 
$str
””  
]
””  !
=
””" #
	returnUrl
””$ -
;
””- .
return
‘‘ 
View
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 	
[
◊◊ 	
HttpPost
◊◊	 
]
◊◊ 
[
ÿÿ 	
AllowAnonymous
ÿÿ	 
]
ÿÿ 
[
ŸŸ 	&
ValidateAntiForgeryToken
ŸŸ	 !
]
ŸŸ! "
public
⁄⁄ 
async
⁄⁄ 
Task
⁄⁄ 
<
⁄⁄ 
IActionResult
⁄⁄ '
>
⁄⁄' (
Register
⁄⁄) 1
(
⁄⁄1 2
RegisterViewModel
⁄⁄2 C
model
⁄⁄D I
,
⁄⁄I J
string
⁄⁄K Q
	returnUrl
⁄⁄R [
=
⁄⁄\ ]
null
⁄⁄^ b
)
⁄⁄b c
{
€€ 	
ViewData
‹‹ 
[
‹‹ 
$str
‹‹  
]
‹‹  !
=
‹‹" #
	returnUrl
‹‹$ -
;
‹‹- .
if
›› 
(
›› 

ModelState
›› 
.
›› 
IsValid
›› "
)
››" #
{
ﬁﬁ 
var
ﬂﬂ 
user
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ 
ApplicationUser
ﬂﬂ .
{
ﬂﬂ/ 0
UserName
ﬂﬂ1 9
=
ﬂﬂ: ;
model
ﬂﬂ< A
.
ﬂﬂA B
Email
ﬂﬂB G
,
ﬂﬂG H
Email
ﬂﬂI N
=
ﬂﬂO P
model
ﬂﬂQ V
.
ﬂﬂV W
Email
ﬂﬂW \
}
ﬂﬂ] ^
;
ﬂﬂ^ _
var
‡‡ 
result
‡‡ 
=
‡‡ 
await
‡‡ "
_userManager
‡‡# /
.
‡‡/ 0
CreateAsync
‡‡0 ;
(
‡‡; <
user
‡‡< @
,
‡‡@ A
model
‡‡B G
.
‡‡G H
Password
‡‡H P
)
‡‡P Q
;
‡‡Q R
if
·· 
(
·· 
result
·· 
.
·· 
	Succeeded
·· $
)
··$ %
{
‚‚ 
_logger
„„ 
.
„„ 
LogInformation
„„ *
(
„„* +
$str
„„+ V
)
„„V W
;
„„W X
var
ÂÂ 
code
ÂÂ 
=
ÂÂ 
await
ÂÂ $
_userManager
ÂÂ% 1
.
ÂÂ1 21
#GenerateEmailConfirmationTokenAsync
ÂÂ2 U
(
ÂÂU V
user
ÂÂV Z
)
ÂÂZ [
;
ÂÂ[ \
var
ÊÊ 
callbackUrl
ÊÊ #
=
ÊÊ$ %
Url
ÊÊ& )
.
ÊÊ) *#
EmailConfirmationLink
ÊÊ* ?
(
ÊÊ? @
user
ÊÊ@ D
.
ÊÊD E
Id
ÊÊE G
,
ÊÊG H
code
ÊÊI M
,
ÊÊM N
Request
ÊÊO V
.
ÊÊV W
Scheme
ÊÊW ]
)
ÊÊ] ^
;
ÊÊ^ _
await
ÁÁ 
_emailSender
ÁÁ &
.
ÁÁ& '(
SendEmailConfirmationAsync
ÁÁ' A
(
ÁÁA B
model
ÁÁB G
.
ÁÁG H
Email
ÁÁH M
,
ÁÁM N
callbackUrl
ÁÁO Z
)
ÁÁZ [
;
ÁÁ[ \
await
ÈÈ 
_signInManager
ÈÈ (
.
ÈÈ( )
SignInAsync
ÈÈ) 4
(
ÈÈ4 5
user
ÈÈ5 9
,
ÈÈ9 :
isPersistent
ÈÈ; G
:
ÈÈG H
false
ÈÈI N
)
ÈÈN O
;
ÈÈO P
_logger
ÍÍ 
.
ÍÍ 
LogInformation
ÍÍ *
(
ÍÍ* +
$str
ÍÍ+ V
)
ÍÍV W
;
ÍÍW X
return
ÎÎ 
RedirectToLocal
ÎÎ *
(
ÎÎ* +
	returnUrl
ÎÎ+ 4
)
ÎÎ4 5
;
ÎÎ5 6
}
ÏÏ 
	AddErrors
ÌÌ 
(
ÌÌ 
result
ÌÌ  
)
ÌÌ  !
;
ÌÌ! "
}
ÓÓ 
return
ÒÒ 
View
ÒÒ 
(
ÒÒ 
model
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
[
ÙÙ 	
HttpPost
ÙÙ	 
]
ÙÙ 
[
ıı 	&
ValidateAntiForgeryToken
ıı	 !
]
ıı! "
public
ˆˆ 
async
ˆˆ 
Task
ˆˆ 
<
ˆˆ 
IActionResult
ˆˆ '
>
ˆˆ' (
Logout
ˆˆ) /
(
ˆˆ/ 0
)
ˆˆ0 1
{
˜˜ 	
await
¯¯ 
_signInManager
¯¯  
.
¯¯  !
SignOutAsync
¯¯! -
(
¯¯- .
)
¯¯. /
;
¯¯/ 0
_logger
˘˘ 
.
˘˘ 
LogInformation
˘˘ "
(
˘˘" #
$str
˘˘# 5
)
˘˘5 6
;
˘˘6 7
return
˙˙ 
RedirectToAction
˙˙ #
(
˙˙# $
nameof
˙˙$ *
(
˙˙* +
HomeController
˙˙+ 9
.
˙˙9 :
Index
˙˙: ?
)
˙˙? @
,
˙˙@ A
$str
˙˙B H
)
˙˙H I
;
˙˙I J
}
˚˚ 	
[
˝˝ 	
HttpPost
˝˝	 
]
˝˝ 
[
˛˛ 	
AllowAnonymous
˛˛	 
]
˛˛ 
[
ˇˇ 	&
ValidateAntiForgeryToken
ˇˇ	 !
]
ˇˇ! "
public
ÄÄ 
IActionResult
ÄÄ 
ExternalLogin
ÄÄ *
(
ÄÄ* +
string
ÄÄ+ 1
provider
ÄÄ2 :
,
ÄÄ: ;
string
ÄÄ< B
	returnUrl
ÄÄC L
=
ÄÄM N
null
ÄÄO S
)
ÄÄS T
{
ÅÅ 	
var
ÉÉ 
redirectUrl
ÉÉ 
=
ÉÉ 
Url
ÉÉ !
.
ÉÉ! "
Action
ÉÉ" (
(
ÉÉ( )
nameof
ÉÉ) /
(
ÉÉ/ 0#
ExternalLoginCallback
ÉÉ0 E
)
ÉÉE F
,
ÉÉF G
$str
ÉÉH Q
,
ÉÉQ R
new
ÉÉS V
{
ÉÉW X
	returnUrl
ÉÉY b
}
ÉÉc d
)
ÉÉd e
;
ÉÉe f
var
ÑÑ 

properties
ÑÑ 
=
ÑÑ 
_signInManager
ÑÑ +
.
ÑÑ+ ,7
)ConfigureExternalAuthenticationProperties
ÑÑ, U
(
ÑÑU V
provider
ÑÑV ^
,
ÑÑ^ _
redirectUrl
ÑÑ` k
)
ÑÑk l
;
ÑÑl m
return
ÖÖ 
	Challenge
ÖÖ 
(
ÖÖ 

properties
ÖÖ '
,
ÖÖ' (
provider
ÖÖ) 1
)
ÖÖ1 2
;
ÖÖ2 3
}
ÜÜ 	
[
àà 	
HttpGet
àà	 
]
àà 
[
ââ 	
AllowAnonymous
ââ	 
]
ââ 
public
ää 
async
ää 
Task
ää 
<
ää 
IActionResult
ää '
>
ää' (#
ExternalLoginCallback
ää) >
(
ää> ?
string
ää? E
	returnUrl
ääF O
=
ääP Q
null
ääR V
,
ääV W
string
ääX ^
remoteError
ää_ j
=
ääk l
null
ääm q
)
ääq r
{
ãã 	
if
åå 
(
åå 
remoteError
åå 
!=
åå 
null
åå #
)
åå# $
{
çç 
ErrorMessage
éé 
=
éé 
$"
éé !,
Error from external provider: 
éé! ?
{
éé? @
remoteError
éé@ K
}
ééK L
"
ééL M
;
ééM N
return
èè 
RedirectToAction
èè '
(
èè' (
nameof
èè( .
(
èè. /
Login
èè/ 4
)
èè4 5
)
èè5 6
;
èè6 7
}
êê 
var
ëë 
info
ëë 
=
ëë 
await
ëë 
_signInManager
ëë +
.
ëë+ ,'
GetExternalLoginInfoAsync
ëë, E
(
ëëE F
)
ëëF G
;
ëëG H
if
íí 
(
íí 
info
íí 
==
íí 
null
íí 
)
íí 
{
ìì 
return
îî 
RedirectToAction
îî '
(
îî' (
nameof
îî( .
(
îî. /
Login
îî/ 4
)
îî4 5
)
îî5 6
;
îî6 7
}
ïï 
var
òò 
result
òò 
=
òò 
await
òò 
_signInManager
òò -
.
òò- .&
ExternalLoginSignInAsync
òò. F
(
òòF G
info
òòG K
.
òòK L
LoginProvider
òòL Y
,
òòY Z
info
òò[ _
.
òò_ `
ProviderKey
òò` k
,
òòk l
isPersistent
òòm y
:
òòy z
falseòò{ Ä
,òòÄ Å
bypassTwoFactoròòÇ ë
:òòë í
trueòòì ó
)òòó ò
;òòò ô
if
ôô 
(
ôô 
result
ôô 
.
ôô 
	Succeeded
ôô  
)
ôô  !
{
öö 
_logger
õõ 
.
õõ 
LogInformation
õõ &
(
õõ& '
$str
õõ' M
,
õõM N
info
õõO S
.
õõS T
LoginProvider
õõT a
)
õõa b
;
õõb c
return
úú 
RedirectToLocal
úú &
(
úú& '
	returnUrl
úú' 0
)
úú0 1
;
úú1 2
}
ùù 
if
ûû 
(
ûû 
result
ûû 
.
ûû 
IsLockedOut
ûû "
)
ûû" #
{
üü 
return
†† 
RedirectToAction
†† '
(
††' (
nameof
††( .
(
††. /
Lockout
††/ 6
)
††6 7
)
††7 8
;
††8 9
}
°° 
else
¢¢ 
{
££ 
ViewData
•• 
[
•• 
$str
•• $
]
••$ %
=
••& '
	returnUrl
••( 1
;
••1 2
ViewData
¶¶ 
[
¶¶ 
$str
¶¶ (
]
¶¶( )
=
¶¶* +
info
¶¶, 0
.
¶¶0 1
LoginProvider
¶¶1 >
;
¶¶> ?
var
ßß 
email
ßß 
=
ßß 
info
ßß  
.
ßß  !
	Principal
ßß! *
.
ßß* +
FindFirstValue
ßß+ 9
(
ßß9 :

ClaimTypes
ßß: D
.
ßßD E
Email
ßßE J
)
ßßJ K
;
ßßK L
return
®® 
View
®® 
(
®® 
$str
®® +
,
®®+ ,
new
®®- 0$
ExternalLoginViewModel
®®1 G
{
®®H I
Email
®®J O
=
®®P Q
email
®®R W
}
®®X Y
)
®®Y Z
;
®®Z [
}
©© 
}
™™ 	
[
¨¨ 	
HttpPost
¨¨	 
]
¨¨ 
[
≠≠ 	
AllowAnonymous
≠≠	 
]
≠≠ 
[
ÆÆ 	&
ValidateAntiForgeryToken
ÆÆ	 !
]
ÆÆ! "
public
ØØ 
async
ØØ 
Task
ØØ 
<
ØØ 
IActionResult
ØØ '
>
ØØ' ('
ExternalLoginConfirmation
ØØ) B
(
ØØB C$
ExternalLoginViewModel
ØØC Y
model
ØØZ _
,
ØØ_ `
string
ØØa g
	returnUrl
ØØh q
=
ØØr s
null
ØØt x
)
ØØx y
{
∞∞ 	
if
±± 
(
±± 

ModelState
±± 
.
±± 
IsValid
±± "
)
±±" #
{
≤≤ 
var
¥¥ 
info
¥¥ 
=
¥¥ 
await
¥¥  
_signInManager
¥¥! /
.
¥¥/ 0'
GetExternalLoginInfoAsync
¥¥0 I
(
¥¥I J
)
¥¥J K
;
¥¥K L
if
µµ 
(
µµ 
info
µµ 
==
µµ 
null
µµ  
)
µµ  !
{
∂∂ 
throw
∑∑ 
new
∑∑ "
ApplicationException
∑∑ 2
(
∑∑2 3
$str
∑∑3 r
)
∑∑r s
;
∑∑s t
}
∏∏ 
var
ππ 
user
ππ 
=
ππ 
new
ππ 
ApplicationUser
ππ .
{
ππ/ 0
UserName
ππ1 9
=
ππ: ;
model
ππ< A
.
ππA B
Email
ππB G
,
ππG H
Email
ππI N
=
ππO P
model
ππQ V
.
ππV W
Email
ππW \
}
ππ] ^
;
ππ^ _
var
∫∫ 
result
∫∫ 
=
∫∫ 
await
∫∫ "
_userManager
∫∫# /
.
∫∫/ 0
CreateAsync
∫∫0 ;
(
∫∫; <
user
∫∫< @
)
∫∫@ A
;
∫∫A B
if
ªª 
(
ªª 
result
ªª 
.
ªª 
	Succeeded
ªª $
)
ªª$ %
{
ºº 
result
ΩΩ 
=
ΩΩ 
await
ΩΩ "
_userManager
ΩΩ# /
.
ΩΩ/ 0
AddLoginAsync
ΩΩ0 =
(
ΩΩ= >
user
ΩΩ> B
,
ΩΩB C
info
ΩΩD H
)
ΩΩH I
;
ΩΩI J
if
ææ 
(
ææ 
result
ææ 
.
ææ 
	Succeeded
ææ (
)
ææ( )
{
øø 
await
¿¿ 
_signInManager
¿¿ ,
.
¿¿, -
SignInAsync
¿¿- 8
(
¿¿8 9
user
¿¿9 =
,
¿¿= >
isPersistent
¿¿? K
:
¿¿K L
false
¿¿M R
)
¿¿R S
;
¿¿S T
_logger
¡¡ 
.
¡¡  
LogInformation
¡¡  .
(
¡¡. /
$str
¡¡/ _
,
¡¡_ `
info
¡¡a e
.
¡¡e f
LoginProvider
¡¡f s
)
¡¡s t
;
¡¡t u
return
¬¬ 
RedirectToLocal
¬¬ .
(
¬¬. /
	returnUrl
¬¬/ 8
)
¬¬8 9
;
¬¬9 :
}
√√ 
}
ƒƒ 
	AddErrors
≈≈ 
(
≈≈ 
result
≈≈  
)
≈≈  !
;
≈≈! "
}
∆∆ 
ViewData
»» 
[
»» 
$str
»»  
]
»»  !
=
»»" #
	returnUrl
»»$ -
;
»»- .
return
…… 
View
…… 
(
…… 
nameof
…… 
(
…… 
ExternalLogin
…… ,
)
……, -
,
……- .
model
……/ 4
)
……4 5
;
……5 6
}
   	
[
ÃÃ 	
HttpGet
ÃÃ	 
]
ÃÃ 
[
ÕÕ 	
AllowAnonymous
ÕÕ	 
]
ÕÕ 
public
ŒŒ 
async
ŒŒ 
Task
ŒŒ 
<
ŒŒ 
IActionResult
ŒŒ '
>
ŒŒ' (
ConfirmEmail
ŒŒ) 5
(
ŒŒ5 6
string
ŒŒ6 <
userId
ŒŒ= C
,
ŒŒC D
string
ŒŒE K
code
ŒŒL P
)
ŒŒP Q
{
œœ 	
if
–– 
(
–– 
userId
–– 
==
–– 
null
–– 
||
–– !
code
––" &
==
––' )
null
––* .
)
––. /
{
—— 
return
““ 
RedirectToAction
““ '
(
““' (
nameof
““( .
(
““. /
HomeController
““/ =
.
““= >
Index
““> C
)
““C D
,
““D E
$str
““F L
)
““L M
;
““M N
}
”” 
var
‘‘ 
user
‘‘ 
=
‘‘ 
await
‘‘ 
_userManager
‘‘ )
.
‘‘) *
FindByIdAsync
‘‘* 7
(
‘‘7 8
userId
‘‘8 >
)
‘‘> ?
;
‘‘? @
if
’’ 
(
’’ 
user
’’ 
==
’’ 
null
’’ 
)
’’ 
{
÷÷ 
throw
◊◊ 
new
◊◊ "
ApplicationException
◊◊ .
(
◊◊. /
$"
◊◊/ 1+
Unable to load user with ID '
◊◊1 N
{
◊◊N O
userId
◊◊O U
}
◊◊U V
'.
◊◊V X
"
◊◊X Y
)
◊◊Y Z
;
◊◊Z [
}
ÿÿ 
var
ŸŸ 
result
ŸŸ 
=
ŸŸ 
await
ŸŸ 
_userManager
ŸŸ +
.
ŸŸ+ ,
ConfirmEmailAsync
ŸŸ, =
(
ŸŸ= >
user
ŸŸ> B
,
ŸŸB C
code
ŸŸD H
)
ŸŸH I
;
ŸŸI J
return
⁄⁄ 
View
⁄⁄ 
(
⁄⁄ 
result
⁄⁄ 
.
⁄⁄ 
	Succeeded
⁄⁄ (
?
⁄⁄) *
$str
⁄⁄+ 9
:
⁄⁄: ;
$str
⁄⁄< C
)
⁄⁄C D
;
⁄⁄D E
}
€€ 	
[
›› 	
HttpGet
››	 
]
›› 
[
ﬁﬁ 	
AllowAnonymous
ﬁﬁ	 
]
ﬁﬁ 
public
ﬂﬂ 
IActionResult
ﬂﬂ 
ForgotPassword
ﬂﬂ +
(
ﬂﬂ+ ,
)
ﬂﬂ, -
{
‡‡ 	
return
·· 
View
·· 
(
·· 
)
·· 
;
·· 
}
‚‚ 	
[
‰‰ 	
HttpPost
‰‰	 
]
‰‰ 
[
ÂÂ 	
AllowAnonymous
ÂÂ	 
]
ÂÂ 
[
ÊÊ 	&
ValidateAntiForgeryToken
ÊÊ	 !
]
ÊÊ! "
public
ÁÁ 
async
ÁÁ 
Task
ÁÁ 
<
ÁÁ 
IActionResult
ÁÁ '
>
ÁÁ' (
ForgotPassword
ÁÁ) 7
(
ÁÁ7 8%
ForgotPasswordViewModel
ÁÁ8 O
model
ÁÁP U
)
ÁÁU V
{
ËË 	
if
ÈÈ 
(
ÈÈ 

ModelState
ÈÈ 
.
ÈÈ 
IsValid
ÈÈ "
)
ÈÈ" #
{
ÍÍ 
var
ÎÎ 
user
ÎÎ 
=
ÎÎ 
await
ÎÎ  
_userManager
ÎÎ! -
.
ÎÎ- .
FindByEmailAsync
ÎÎ. >
(
ÎÎ> ?
model
ÎÎ? D
.
ÎÎD E
Email
ÎÎE J
)
ÎÎJ K
;
ÎÎK L
if
ÏÏ 
(
ÏÏ 
user
ÏÏ 
==
ÏÏ 
null
ÏÏ  
||
ÏÏ! #
!
ÏÏ$ %
(
ÏÏ% &
await
ÏÏ& +
_userManager
ÏÏ, 8
.
ÏÏ8 9#
IsEmailConfirmedAsync
ÏÏ9 N
(
ÏÏN O
user
ÏÏO S
)
ÏÏS T
)
ÏÏT U
)
ÏÏU V
{
ÌÌ 
return
ÔÔ 
RedirectToAction
ÔÔ +
(
ÔÔ+ ,
nameof
ÔÔ, 2
(
ÔÔ2 3(
ForgotPasswordConfirmation
ÔÔ3 M
)
ÔÔM N
)
ÔÔN O
;
ÔÔO P
}
 
var
ÙÙ 
code
ÙÙ 
=
ÙÙ 
await
ÙÙ  
_userManager
ÙÙ! -
.
ÙÙ- .-
GeneratePasswordResetTokenAsync
ÙÙ. M
(
ÙÙM N
user
ÙÙN R
)
ÙÙR S
;
ÙÙS T
var
ıı 
callbackUrl
ıı 
=
ıı  !
Url
ıı" %
.
ıı% &'
ResetPasswordCallbackLink
ıı& ?
(
ıı? @
user
ıı@ D
.
ııD E
Id
ııE G
,
ııG H
code
ııI M
,
ııM N
Request
ııO V
.
ııV W
Scheme
ııW ]
)
ıı] ^
;
ıı^ _
await
ˆˆ 
_emailSender
ˆˆ "
.
ˆˆ" #
SendEmailAsync
ˆˆ# 1
(
ˆˆ1 2
model
ˆˆ2 7
.
ˆˆ7 8
Email
ˆˆ8 =
,
ˆˆ= >
$str
ˆˆ? O
,
ˆˆO P
$"
˜˜ D
6Please reset your password by clicking here: <a href='
˜˜ K
{
˜˜K L
callbackUrl
˜˜L W
}
˜˜W X

'>link</a>
˜˜X b
"
˜˜b c
)
˜˜c d
;
˜˜d e
return
¯¯ 
RedirectToAction
¯¯ '
(
¯¯' (
nameof
¯¯( .
(
¯¯. /(
ForgotPasswordConfirmation
¯¯/ I
)
¯¯I J
)
¯¯J K
;
¯¯K L
}
˘˘ 
return
¸¸ 
View
¸¸ 
(
¸¸ 
model
¸¸ 
)
¸¸ 
;
¸¸ 
}
˝˝ 	
[
ˇˇ 	
HttpGet
ˇˇ	 
]
ˇˇ 
[
ÄÄ 	
AllowAnonymous
ÄÄ	 
]
ÄÄ 
public
ÅÅ 
IActionResult
ÅÅ (
ForgotPasswordConfirmation
ÅÅ 7
(
ÅÅ7 8
)
ÅÅ8 9
{
ÇÇ 	
return
ÉÉ 
View
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
[
ÜÜ 	
HttpGet
ÜÜ	 
]
ÜÜ 
[
áá 	
AllowAnonymous
áá	 
]
áá 
public
àà 
IActionResult
àà 
ResetPassword
àà *
(
àà* +
string
àà+ 1
code
àà2 6
=
àà7 8
null
àà9 =
)
àà= >
{
ââ 	
if
ää 
(
ää 
code
ää 
==
ää 
null
ää 
)
ää 
{
ãã 
throw
åå 
new
åå "
ApplicationException
åå .
(
åå. /
$str
åå/ \
)
åå\ ]
;
åå] ^
}
çç 
var
éé 
model
éé 
=
éé 
new
éé $
ResetPasswordViewModel
éé 2
{
éé3 4
Code
éé5 9
=
éé: ;
code
éé< @
}
ééA B
;
ééB C
return
èè 
View
èè 
(
èè 
model
èè 
)
èè 
;
èè 
}
êê 	
[
íí 	
HttpPost
íí	 
]
íí 
[
ìì 	
AllowAnonymous
ìì	 
]
ìì 
[
îî 	&
ValidateAntiForgeryToken
îî	 !
]
îî! "
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
IActionResult
ïï '
>
ïï' (
ResetPassword
ïï) 6
(
ïï6 7$
ResetPasswordViewModel
ïï7 M
model
ïïN S
)
ïïS T
{
ññ 	
if
óó 
(
óó 
!
óó 

ModelState
óó 
.
óó 
IsValid
óó #
)
óó# $
{
òò 
return
ôô 
View
ôô 
(
ôô 
model
ôô !
)
ôô! "
;
ôô" #
}
öö 
var
õõ 
user
õõ 
=
õõ 
await
õõ 
_userManager
õõ )
.
õõ) *
FindByEmailAsync
õõ* :
(
õõ: ;
model
õõ; @
.
õõ@ A
Email
õõA F
)
õõF G
;
õõG H
if
úú 
(
úú 
user
úú 
==
úú 
null
úú 
)
úú 
{
ùù 
return
üü 
RedirectToAction
üü '
(
üü' (
nameof
üü( .
(
üü. /'
ResetPasswordConfirmation
üü/ H
)
üüH I
)
üüI J
;
üüJ K
}
†† 
var
°° 
result
°° 
=
°° 
await
°° 
_userManager
°° +
.
°°+ , 
ResetPasswordAsync
°°, >
(
°°> ?
user
°°? C
,
°°C D
model
°°E J
.
°°J K
Code
°°K O
,
°°O P
model
°°Q V
.
°°V W
Password
°°W _
)
°°_ `
;
°°` a
if
¢¢ 
(
¢¢ 
result
¢¢ 
.
¢¢ 
	Succeeded
¢¢  
)
¢¢  !
{
££ 
return
§§ 
RedirectToAction
§§ '
(
§§' (
nameof
§§( .
(
§§. /'
ResetPasswordConfirmation
§§/ H
)
§§H I
)
§§I J
;
§§J K
}
•• 
	AddErrors
¶¶ 
(
¶¶ 
result
¶¶ 
)
¶¶ 
;
¶¶ 
return
ßß 
View
ßß 
(
ßß 
)
ßß 
;
ßß 
}
®® 	
[
™™ 	
HttpGet
™™	 
]
™™ 
[
´´ 	
AllowAnonymous
´´	 
]
´´ 
public
¨¨ 
IActionResult
¨¨ '
ResetPasswordConfirmation
¨¨ 6
(
¨¨6 7
)
¨¨7 8
{
≠≠ 	
return
ÆÆ 
View
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 	
[
≤≤ 	
HttpGet
≤≤	 
]
≤≤ 
public
≥≥ 
IActionResult
≥≥ 
AccessDenied
≥≥ )
(
≥≥) *
)
≥≥* +
{
¥¥ 	
return
µµ 
View
µµ 
(
µµ 
)
µµ 
;
µµ 
}
∂∂ 	
private
∫∫ 
void
∫∫ 
	AddErrors
∫∫ 
(
∫∫ 
IdentityResult
∫∫ -
result
∫∫. 4
)
∫∫4 5
{
ªª 	
foreach
ºº 
(
ºº 
var
ºº 
error
ºº 
in
ºº !
result
ºº" (
.
ºº( )
Errors
ºº) /
)
ºº/ 0
{
ΩΩ 

ModelState
ææ 
.
ææ 
AddModelError
ææ (
(
ææ( )
string
ææ) /
.
ææ/ 0
Empty
ææ0 5
,
ææ5 6
error
ææ7 <
.
ææ< =
Description
ææ= H
)
ææH I
;
ææI J
}
øø 
}
¿¿ 	
private
¬¬ 
IActionResult
¬¬ 
RedirectToLocal
¬¬ -
(
¬¬- .
string
¬¬. 4
	returnUrl
¬¬5 >
)
¬¬> ?
{
√√ 	
if
ƒƒ 
(
ƒƒ 
Url
ƒƒ 
.
ƒƒ 

IsLocalUrl
ƒƒ 
(
ƒƒ 
	returnUrl
ƒƒ (
)
ƒƒ( )
)
ƒƒ) *
{
≈≈ 
return
∆∆ 
Redirect
∆∆ 
(
∆∆  
	returnUrl
∆∆  )
)
∆∆) *
;
∆∆* +
}
«« 
else
»» 
{
…… 
return
   
RedirectToAction
   '
(
  ' (
nameof
  ( .
(
  . /
HomeController
  / =
.
  = >
Index
  > C
)
  C D
,
  D E
$str
  F L
)
  L M
;
  M N
}
ÀÀ 
}
ÃÃ 	
}
œœ 
}–– ·
WC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\DbPopulateController.cs
	namespace 	
_Presentation
 
. 
Controllers #
{		 
public

 

class

  
DbPopulateController

 %
:

& '

Controller

( 2
{ 
private 
DatabaseContext 
databaseContext  /
;/ 0
GenericRepository 
< 
Train 
>  
trainsRepository! 1
;1 2
GenericRepository 
< 
Station !
>! "
stationRepository# 4
;4 5

DbPopulate 

dbPopulate 
; 
public  
DbPopulateController #
(# $
DatabaseContext$ 3
_databaseContext4 D
)D E
{ 	
databaseContext 
= 
_databaseContext .
;. /
trainsRepository 
= 
new "
GenericRepository# 4
<4 5
Train5 :
>: ;
(; <
databaseContext< K
)K L
;L M
stationRepository 
= 
new  #
GenericRepository$ 5
<5 6
Station6 =
>= >
(> ?
databaseContext? N
)N O
;O P

dbPopulate 
= 
new 
Data !
.! "
Domain" (
.( )
Entities) 1
.1 2

DbPopulate2 <
(< =
)= >
;> ?
} 	
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
["" 	
Route""	 
("" 
$str"" "
)""" #
]""# $
public## 
ActionResult## 
	AddTrains## %
(##% &
)##& '
{$$ 	
List%% 
<%% 
Train%% 
>%% 
trains%% 
=%%  

dbPopulate%%! +
.%%+ ,
	GetTrains%%, 5
(%%5 6
)%%6 7
;%%7 8
foreach&& 
(&& 
var&& 
train&& 
in&& !
trains&&" (
)&&( )
{'' 
trainsRepository((  
.((  !
Create((! '
(((' (
train((( -
)((- .
;((. /
})) 
return** 
new** 
EmptyResult** "
(**" #
)**# $
;**$ %
}++ 	
[-- 	
Route--	 
(-- 
$str-- $
)--$ %
]--% &
public.. 
ActionResult.. 
AddStations.. '
(..' (
)..( )
{// 	
List00 
<00 
Station00 
>00 
stations00 "
=00# $

dbPopulate00% /
.00/ 0
GetStations000 ;
(00; <
)00< =
;00= >
foreach11 
(11 
var11 
station11  
in11! #
stations11$ ,
)11, -
{22 
stationRepository33 !
.33! "
Create33" (
(33( )
station33) 0
)330 1
;331 2
}44 
return55 
new55 
EmptyResult55 "
(55" #
)55# $
;55$ %
}66 	
}88 
}99 ¨
QC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\HomeController.cs
	namespace		 	
Presentation		
 
.		 
Controllers		 "
{

 
public 

class 
HomeController 
:  !

Controller" ,
{ 
public 
IActionResult 
Index "
(" #
)# $
{ 	
return 
View 
( 
) 
; 
} 	
public 
IActionResult 
About "
(" #
)# $
{ 	
ViewData 
[ 
$str 
] 
=  !
$str" F
;F G
return 
View 
( 
) 
; 
} 	
public 
IActionResult 
Contact $
($ %
)% &
{ 	
ViewData 
[ 
$str 
] 
=  !
$str" 6
;6 7
return 
View 
( 
) 
; 
} 	
public   
IActionResult   
Error   "
(  " #
)  # $
{!! 	
return"" 
View"" 
("" 
new"" 
ErrorViewModel"" *
{""+ ,
	RequestId""- 6
=""7 8
Activity""9 A
.""A B
Current""B I
?""I J
.""J K
Id""K M
??""N P
HttpContext""Q \
.""\ ]
TraceIdentifier""] l
}""m n
)""n o
;""o p
}## 	
}$$ 
}%% ôÖ
SC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\ManageController.cs
	namespace 	
Presentation
 
. 
Controllers "
{ 
[ 
	Authorize 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
ManageController !
:" #

Controller$ .
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
SignInManager &
<& '
ApplicationUser' 6
>6 7
_signInManager8 F
;F G
private 
readonly 
IEmailSender %
_emailSender& 2
;2 3
private 
readonly 
ILogger  
_logger! (
;( )
private 
readonly 

UrlEncoder #
_urlEncoder$ /
;/ 0
private 
const 
string !
AuthenicatorUriFormat 2
=3 4
$str5 l
;l m
public 
ManageController 
(  
UserManager  
 
<   
ApplicationUser   %
>  % &
userManager  ' 2
,  2 3
SignInManager!!
 
<!! 
ApplicationUser!! '
>!!' (
signInManager!!) 6
,!!6 7
IEmailSender""
 
emailSender"" "
,""" #
ILogger##
 
<## 
ManageController## "
>##" #
logger##$ *
,##* +

UrlEncoder$$
 

urlEncoder$$ 
)$$  
{%% 	
_userManager&& 
=&& 
userManager&& &
;&&& '
_signInManager'' 
='' 
signInManager'' *
;''* +
_emailSender(( 
=(( 
emailSender(( &
;((& '
_logger)) 
=)) 
logger)) 
;)) 
_urlEncoder** 
=** 

urlEncoder** $
;**$ %
}++ 	
[-- 	
TempData--	 
]-- 
public.. 
string.. 
StatusMessage.. #
{..$ %
get..& )
;..) *
set..+ .
;... /
}..0 1
[00 	
HttpGet00	 
]00 
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (
Index11) .
(11. /
)11/ 0
{22 	
var33 
user33 
=33 
await33 
_userManager33 )
.33) *
GetUserAsync33* 6
(336 7
User337 ;
)33; <
;33< =
if44 
(44 
user44 
==44 
null44 
)44 
{55 
throw66 
new66  
ApplicationException66 .
(66. /
$"66/ 1)
Unable to load user with ID '661 N
{66N O
_userManager66O [
.66[ \
	GetUserId66\ e
(66e f
User66f j
)66j k
}66k l
'.66l n
"66n o
)66o p
;66p q
}77 
var99 
model99 
=99 
new99 
IndexViewModel99 *
{:: 
Username;; 
=;; 
user;; 
.;;  
UserName;;  (
,;;( )
Email<< 
=<< 
user<< 
.<< 
Email<< "
,<<" #
PhoneNumber== 
=== 
user== "
.==" #
PhoneNumber==# .
,==. /
IsEmailConfirmed>>  
=>>! "
user>># '
.>>' (
EmailConfirmed>>( 6
,>>6 7
StatusMessage?? 
=?? 
StatusMessage??  -
}@@ 
;@@ 
returnBB 
ViewBB 
(BB 
modelBB 
)BB 
;BB 
}CC 	
[EE 	
HttpPostEE	 
]EE 
[FF 	$
ValidateAntiForgeryTokenFF	 !
]FF! "
publicGG 
asyncGG 
TaskGG 
<GG 
IActionResultGG '
>GG' (
IndexGG) .
(GG. /
IndexViewModelGG/ =
modelGG> C
)GGC D
{HH 	
ifII 
(II 
!II 

ModelStateII 
.II 
IsValidII #
)II# $
{JJ 
returnKK 
ViewKK 
(KK 
modelKK !
)KK! "
;KK" #
}LL 
varNN 
userNN 
=NN 
awaitNN 
_userManagerNN )
.NN) *
GetUserAsyncNN* 6
(NN6 7
UserNN7 ;
)NN; <
;NN< =
ifOO 
(OO 
userOO 
==OO 
nullOO 
)OO 
{PP 
throwQQ 
newQQ  
ApplicationExceptionQQ .
(QQ. /
$"QQ/ 1)
Unable to load user with ID 'QQ1 N
{QQN O
_userManagerQQO [
.QQ[ \
	GetUserIdQQ\ e
(QQe f
UserQQf j
)QQj k
}QQk l
'.QQl n
"QQn o
)QQo p
;QQp q
}RR 
varTT 
emailTT 
=TT 
userTT 
.TT 
EmailTT "
;TT" #
ifUU 
(UU 
modelUU 
.UU 
EmailUU 
!=UU 
emailUU $
)UU$ %
{VV 
varWW 
setEmailResultWW "
=WW# $
awaitWW% *
_userManagerWW+ 7
.WW7 8
SetEmailAsyncWW8 E
(WWE F
userWWF J
,WWJ K
modelWWL Q
.WWQ R
EmailWWR W
)WWW X
;WWX Y
ifXX 
(XX 
!XX 
setEmailResultXX #
.XX# $
	SucceededXX$ -
)XX- .
{YY 
throwZZ 
newZZ  
ApplicationExceptionZZ 2
(ZZ2 3
$"ZZ3 5F
:Unexpected error occurred setting email for user with ID 'ZZ5 o
{ZZo p
userZZp t
.ZZt u
IdZZu w
}ZZw x
'.ZZx z
"ZZz {
)ZZ{ |
;ZZ| }
}[[ 
}\\ 
var^^ 
phoneNumber^^ 
=^^ 
user^^ "
.^^" #
PhoneNumber^^# .
;^^. /
if__ 
(__ 
model__ 
.__ 
PhoneNumber__ !
!=__" $
phoneNumber__% 0
)__0 1
{`` 
varaa 
setPhoneResultaa "
=aa# $
awaitaa% *
_userManageraa+ 7
.aa7 8
SetPhoneNumberAsyncaa8 K
(aaK L
useraaL P
,aaP Q
modelaaR W
.aaW X
PhoneNumberaaX c
)aac d
;aad e
ifbb 
(bb 
!bb 
setPhoneResultbb #
.bb# $
	Succeededbb$ -
)bb- .
{cc 
throwdd 
newdd  
ApplicationExceptiondd 2
(dd2 3
$"dd3 5M
AUnexpected error occurred setting phone number for user with ID 'dd5 v
{ddv w
userddw {
.dd{ |
Iddd| ~
}dd~ 
'.	dd Å
"
ddÅ Ç
)
ddÇ É
;
ddÉ Ñ
}ee 
}ff 
StatusMessagehh 
=hh 
$strhh ;
;hh; <
returnii 
RedirectToActionii #
(ii# $
nameofii$ *
(ii* +
Indexii+ 0
)ii0 1
)ii1 2
;ii2 3
}jj 	
[ll 	
HttpPostll	 
]ll 
[mm 	$
ValidateAntiForgeryTokenmm	 !
]mm! "
publicnn 
asyncnn 
Tasknn 
<nn 
IActionResultnn '
>nn' (!
SendVerificationEmailnn) >
(nn> ?
IndexViewModelnn? M
modelnnN S
)nnS T
{oo 	
ifpp 
(pp 
!pp 

ModelStatepp 
.pp 
IsValidpp #
)pp# $
{qq 
returnrr 
Viewrr 
(rr 
modelrr !
)rr! "
;rr" #
}ss 
varuu 
useruu 
=uu 
awaituu 
_userManageruu )
.uu) *
GetUserAsyncuu* 6
(uu6 7
Useruu7 ;
)uu; <
;uu< =
ifvv 
(vv 
uservv 
==vv 
nullvv 
)vv 
{ww 
throwxx 
newxx  
ApplicationExceptionxx .
(xx. /
$"xx/ 1)
Unable to load user with ID 'xx1 N
{xxN O
_userManagerxxO [
.xx[ \
	GetUserIdxx\ e
(xxe f
Userxxf j
)xxj k
}xxk l
'.xxl n
"xxn o
)xxo p
;xxp q
}yy 
var{{ 
code{{ 
={{ 
await{{ 
_userManager{{ )
.{{) */
#GenerateEmailConfirmationTokenAsync{{* M
({{M N
user{{N R
){{R S
;{{S T
var|| 
callbackUrl|| 
=|| 
Url|| !
.||! "!
EmailConfirmationLink||" 7
(||7 8
user||8 <
.||< =
Id||= ?
,||? @
code||A E
,||E F
Request||G N
.||N O
Scheme||O U
)||U V
;||V W
var}} 
email}} 
=}} 
user}} 
.}} 
Email}} "
;}}" #
await~~ 
_emailSender~~ 
.~~ &
SendEmailConfirmationAsync~~ 9
(~~9 :
email~~: ?
,~~? @
callbackUrl~~A L
)~~L M
;~~M N
StatusMessage
ÄÄ 
=
ÄÄ 
$str
ÄÄ O
;
ÄÄO P
return
ÅÅ 
RedirectToAction
ÅÅ #
(
ÅÅ# $
nameof
ÅÅ$ *
(
ÅÅ* +
Index
ÅÅ+ 0
)
ÅÅ0 1
)
ÅÅ1 2
;
ÅÅ2 3
}
ÇÇ 	
[
ÑÑ 	
HttpGet
ÑÑ	 
]
ÑÑ 
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
IActionResult
ÖÖ '
>
ÖÖ' (
ChangePassword
ÖÖ) 7
(
ÖÖ7 8
)
ÖÖ8 9
{
ÜÜ 	
var
áá 
user
áá 
=
áá 
await
áá 
_userManager
áá )
.
áá) *
GetUserAsync
áá* 6
(
áá6 7
User
áá7 ;
)
áá; <
;
áá< =
if
àà 
(
àà 
user
àà 
==
àà 
null
àà 
)
àà 
{
ââ 
throw
ää 
new
ää "
ApplicationException
ää .
(
ää. /
$"
ää/ 1+
Unable to load user with ID '
ää1 N
{
ääN O
_userManager
ääO [
.
ää[ \
	GetUserId
ää\ e
(
ääe f
User
ääf j
)
ääj k
}
ääk l
'.
ääl n
"
ään o
)
ääo p
;
ääp q
}
ãã 
var
çç 
hasPassword
çç 
=
çç 
await
çç #
_userManager
çç$ 0
.
çç0 1
HasPasswordAsync
çç1 A
(
ççA B
user
ççB F
)
ççF G
;
ççG H
if
éé 
(
éé 
!
éé 
hasPassword
éé 
)
éé 
{
èè 
return
êê 
RedirectToAction
êê '
(
êê' (
nameof
êê( .
(
êê. /
SetPassword
êê/ :
)
êê: ;
)
êê; <
;
êê< =
}
ëë 
var
ìì 
model
ìì 
=
ìì 
new
ìì %
ChangePasswordViewModel
ìì 3
{
ìì4 5
StatusMessage
ìì6 C
=
ììD E
StatusMessage
ììF S
}
ììT U
;
ììU V
return
îî 
View
îî 
(
îî 
model
îî 
)
îî 
;
îî 
}
ïï 	
[
óó 	
HttpPost
óó	 
]
óó 
[
òò 	&
ValidateAntiForgeryToken
òò	 !
]
òò! "
public
ôô 
async
ôô 
Task
ôô 
<
ôô 
IActionResult
ôô '
>
ôô' (
ChangePassword
ôô) 7
(
ôô7 8%
ChangePasswordViewModel
ôô8 O
model
ôôP U
)
ôôU V
{
öö 	
if
õõ 
(
õõ 
!
õõ 

ModelState
õõ 
.
õõ 
IsValid
õõ #
)
õõ# $
{
úú 
return
ùù 
View
ùù 
(
ùù 
model
ùù !
)
ùù! "
;
ùù" #
}
ûû 
var
†† 
user
†† 
=
†† 
await
†† 
_userManager
†† )
.
††) *
GetUserAsync
††* 6
(
††6 7
User
††7 ;
)
††; <
;
††< =
if
°° 
(
°° 
user
°° 
==
°° 
null
°° 
)
°° 
{
¢¢ 
throw
££ 
new
££ "
ApplicationException
££ .
(
££. /
$"
££/ 1+
Unable to load user with ID '
££1 N
{
££N O
_userManager
££O [
.
££[ \
	GetUserId
££\ e
(
££e f
User
££f j
)
££j k
}
££k l
'.
££l n
"
££n o
)
££o p
;
££p q
}
§§ 
var
¶¶ "
changePasswordResult
¶¶ $
=
¶¶% &
await
¶¶' ,
_userManager
¶¶- 9
.
¶¶9 :!
ChangePasswordAsync
¶¶: M
(
¶¶M N
user
¶¶N R
,
¶¶R S
model
¶¶T Y
.
¶¶Y Z
OldPassword
¶¶Z e
,
¶¶e f
model
¶¶g l
.
¶¶l m
NewPassword
¶¶m x
)
¶¶x y
;
¶¶y z
if
ßß 
(
ßß 
!
ßß "
changePasswordResult
ßß %
.
ßß% &
	Succeeded
ßß& /
)
ßß/ 0
{
®® 
	AddErrors
©© 
(
©© "
changePasswordResult
©© .
)
©©. /
;
©©/ 0
return
™™ 
View
™™ 
(
™™ 
model
™™ !
)
™™! "
;
™™" #
}
´´ 
await
≠≠ 
_signInManager
≠≠  
.
≠≠  !
SignInAsync
≠≠! ,
(
≠≠, -
user
≠≠- 1
,
≠≠1 2
isPersistent
≠≠3 ?
:
≠≠? @
false
≠≠A F
)
≠≠F G
;
≠≠G H
_logger
ÆÆ 
.
ÆÆ 
LogInformation
ÆÆ "
(
ÆÆ" #
$str
ÆÆ# N
)
ÆÆN O
;
ÆÆO P
StatusMessage
ØØ 
=
ØØ 
$str
ØØ =
;
ØØ= >
return
±± 
RedirectToAction
±± #
(
±±# $
nameof
±±$ *
(
±±* +
ChangePassword
±±+ 9
)
±±9 :
)
±±: ;
;
±±; <
}
≤≤ 	
[
¥¥ 	
HttpGet
¥¥	 
]
¥¥ 
public
µµ 
async
µµ 
Task
µµ 
<
µµ 
IActionResult
µµ '
>
µµ' (
SetPassword
µµ) 4
(
µµ4 5
)
µµ5 6
{
∂∂ 	
var
∑∑ 
user
∑∑ 
=
∑∑ 
await
∑∑ 
_userManager
∑∑ )
.
∑∑) *
GetUserAsync
∑∑* 6
(
∑∑6 7
User
∑∑7 ;
)
∑∑; <
;
∑∑< =
if
∏∏ 
(
∏∏ 
user
∏∏ 
==
∏∏ 
null
∏∏ 
)
∏∏ 
{
ππ 
throw
∫∫ 
new
∫∫ "
ApplicationException
∫∫ .
(
∫∫. /
$"
∫∫/ 1+
Unable to load user with ID '
∫∫1 N
{
∫∫N O
_userManager
∫∫O [
.
∫∫[ \
	GetUserId
∫∫\ e
(
∫∫e f
User
∫∫f j
)
∫∫j k
}
∫∫k l
'.
∫∫l n
"
∫∫n o
)
∫∫o p
;
∫∫p q
}
ªª 
var
ΩΩ 
hasPassword
ΩΩ 
=
ΩΩ 
await
ΩΩ #
_userManager
ΩΩ$ 0
.
ΩΩ0 1
HasPasswordAsync
ΩΩ1 A
(
ΩΩA B
user
ΩΩB F
)
ΩΩF G
;
ΩΩG H
if
øø 
(
øø 
hasPassword
øø 
)
øø 
{
¿¿ 
return
¡¡ 
RedirectToAction
¡¡ '
(
¡¡' (
nameof
¡¡( .
(
¡¡. /
ChangePassword
¡¡/ =
)
¡¡= >
)
¡¡> ?
;
¡¡? @
}
¬¬ 
var
ƒƒ 
model
ƒƒ 
=
ƒƒ 
new
ƒƒ "
SetPasswordViewModel
ƒƒ 0
{
ƒƒ1 2
StatusMessage
ƒƒ3 @
=
ƒƒA B
StatusMessage
ƒƒC P
}
ƒƒQ R
;
ƒƒR S
return
≈≈ 
View
≈≈ 
(
≈≈ 
model
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 	
[
»» 	
HttpPost
»»	 
]
»» 
[
…… 	&
ValidateAntiForgeryToken
……	 !
]
……! "
public
   
async
   
Task
   
<
   
IActionResult
   '
>
  ' (
SetPassword
  ) 4
(
  4 5"
SetPasswordViewModel
  5 I
model
  J O
)
  O P
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
!
ÃÃ 

ModelState
ÃÃ 
.
ÃÃ 
IsValid
ÃÃ #
)
ÃÃ# $
{
ÕÕ 
return
ŒŒ 
View
ŒŒ 
(
ŒŒ 
model
ŒŒ !
)
ŒŒ! "
;
ŒŒ" #
}
œœ 
var
—— 
user
—— 
=
—— 
await
—— 
_userManager
—— )
.
——) *
GetUserAsync
——* 6
(
——6 7
User
——7 ;
)
——; <
;
——< =
if
““ 
(
““ 
user
““ 
==
““ 
null
““ 
)
““ 
{
”” 
throw
‘‘ 
new
‘‘ "
ApplicationException
‘‘ .
(
‘‘. /
$"
‘‘/ 1+
Unable to load user with ID '
‘‘1 N
{
‘‘N O
_userManager
‘‘O [
.
‘‘[ \
	GetUserId
‘‘\ e
(
‘‘e f
User
‘‘f j
)
‘‘j k
}
‘‘k l
'.
‘‘l n
"
‘‘n o
)
‘‘o p
;
‘‘p q
}
’’ 
var
◊◊ 
addPasswordResult
◊◊ !
=
◊◊" #
await
◊◊$ )
_userManager
◊◊* 6
.
◊◊6 7
AddPasswordAsync
◊◊7 G
(
◊◊G H
user
◊◊H L
,
◊◊L M
model
◊◊N S
.
◊◊S T
NewPassword
◊◊T _
)
◊◊_ `
;
◊◊` a
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
addPasswordResult
ÿÿ "
.
ÿÿ" #
	Succeeded
ÿÿ# ,
)
ÿÿ, -
{
ŸŸ 
	AddErrors
⁄⁄ 
(
⁄⁄ 
addPasswordResult
⁄⁄ +
)
⁄⁄+ ,
;
⁄⁄, -
return
€€ 
View
€€ 
(
€€ 
model
€€ !
)
€€! "
;
€€" #
}
‹‹ 
await
ﬁﬁ 
_signInManager
ﬁﬁ  
.
ﬁﬁ  !
SignInAsync
ﬁﬁ! ,
(
ﬁﬁ, -
user
ﬁﬁ- 1
,
ﬁﬁ1 2
isPersistent
ﬁﬁ3 ?
:
ﬁﬁ? @
false
ﬁﬁA F
)
ﬁﬁF G
;
ﬁﬁG H
StatusMessage
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ 9
;
ﬂﬂ9 :
return
·· 
RedirectToAction
·· #
(
··# $
nameof
··$ *
(
··* +
SetPassword
··+ 6
)
··6 7
)
··7 8
;
··8 9
}
‚‚ 	
[
‰‰ 	
HttpGet
‰‰	 
]
‰‰ 
public
ÂÂ 
async
ÂÂ 
Task
ÂÂ 
<
ÂÂ 
IActionResult
ÂÂ '
>
ÂÂ' (
ExternalLogins
ÂÂ) 7
(
ÂÂ7 8
)
ÂÂ8 9
{
ÊÊ 	
var
ÁÁ 
user
ÁÁ 
=
ÁÁ 
await
ÁÁ 
_userManager
ÁÁ )
.
ÁÁ) *
GetUserAsync
ÁÁ* 6
(
ÁÁ6 7
User
ÁÁ7 ;
)
ÁÁ; <
;
ÁÁ< =
if
ËË 
(
ËË 
user
ËË 
==
ËË 
null
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ "
ApplicationException
ÍÍ .
(
ÍÍ. /
$"
ÍÍ/ 1+
Unable to load user with ID '
ÍÍ1 N
{
ÍÍN O
_userManager
ÍÍO [
.
ÍÍ[ \
	GetUserId
ÍÍ\ e
(
ÍÍe f
User
ÍÍf j
)
ÍÍj k
}
ÍÍk l
'.
ÍÍl n
"
ÍÍn o
)
ÍÍo p
;
ÍÍp q
}
ÎÎ 
var
ÌÌ 
model
ÌÌ 
=
ÌÌ 
new
ÌÌ %
ExternalLoginsViewModel
ÌÌ 3
{
ÌÌ4 5
CurrentLogins
ÌÌ6 C
=
ÌÌD E
await
ÌÌF K
_userManager
ÌÌL X
.
ÌÌX Y
GetLoginsAsync
ÌÌY g
(
ÌÌg h
user
ÌÌh l
)
ÌÌl m
}
ÌÌn o
;
ÌÌo p
model
ÓÓ 
.
ÓÓ 
OtherLogins
ÓÓ 
=
ÓÓ 
(
ÓÓ  !
await
ÓÓ! &
_signInManager
ÓÓ' 5
.
ÓÓ5 63
%GetExternalAuthenticationSchemesAsync
ÓÓ6 [
(
ÓÓ[ \
)
ÓÓ\ ]
)
ÓÓ] ^
.
ÔÔ 
Where
ÔÔ 
(
ÔÔ 
auth
ÔÔ 
=>
ÔÔ 
model
ÔÔ $
.
ÔÔ$ %
CurrentLogins
ÔÔ% 2
.
ÔÔ2 3
All
ÔÔ3 6
(
ÔÔ6 7
ul
ÔÔ7 9
=>
ÔÔ: <
auth
ÔÔ= A
.
ÔÔA B
Name
ÔÔB F
!=
ÔÔG I
ul
ÔÔJ L
.
ÔÔL M
LoginProvider
ÔÔM Z
)
ÔÔZ [
)
ÔÔ[ \
.
 
ToList
 
(
 
)
 
;
 
model
ÒÒ 
.
ÒÒ 
ShowRemoveButton
ÒÒ "
=
ÒÒ# $
await
ÒÒ% *
_userManager
ÒÒ+ 7
.
ÒÒ7 8
HasPasswordAsync
ÒÒ8 H
(
ÒÒH I
user
ÒÒI M
)
ÒÒM N
||
ÒÒO Q
model
ÒÒR W
.
ÒÒW X
CurrentLogins
ÒÒX e
.
ÒÒe f
Count
ÒÒf k
>
ÒÒl m
$num
ÒÒn o
;
ÒÒo p
model
ÚÚ 
.
ÚÚ 
StatusMessage
ÚÚ 
=
ÚÚ  !
StatusMessage
ÚÚ" /
;
ÚÚ/ 0
return
ÙÙ 
View
ÙÙ 
(
ÙÙ 
model
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ıı 	
[
˜˜ 	
HttpPost
˜˜	 
]
˜˜ 
[
¯¯ 	&
ValidateAntiForgeryToken
¯¯	 !
]
¯¯! "
public
˘˘ 
async
˘˘ 
Task
˘˘ 
<
˘˘ 
IActionResult
˘˘ '
>
˘˘' (
	LinkLogin
˘˘) 2
(
˘˘2 3
string
˘˘3 9
provider
˘˘: B
)
˘˘B C
{
˙˙ 	
await
¸¸ 
HttpContext
¸¸ 
.
¸¸ 
SignOutAsync
¸¸ *
(
¸¸* +
IdentityConstants
¸¸+ <
.
¸¸< =
ExternalScheme
¸¸= K
)
¸¸K L
;
¸¸L M
var
ˇˇ 
redirectUrl
ˇˇ 
=
ˇˇ 
Url
ˇˇ !
.
ˇˇ! "
Action
ˇˇ" (
(
ˇˇ( )
nameof
ˇˇ) /
(
ˇˇ/ 0
LinkLoginCallback
ˇˇ0 A
)
ˇˇA B
)
ˇˇB C
;
ˇˇC D
var
ÄÄ 

properties
ÄÄ 
=
ÄÄ 
_signInManager
ÄÄ +
.
ÄÄ+ ,7
)ConfigureExternalAuthenticationProperties
ÄÄ, U
(
ÄÄU V
provider
ÄÄV ^
,
ÄÄ^ _
redirectUrl
ÄÄ` k
,
ÄÄk l
_userManager
ÄÄm y
.
ÄÄy z
	GetUserIdÄÄz É
(ÄÄÉ Ñ
UserÄÄÑ à
)ÄÄà â
)ÄÄâ ä
;ÄÄä ã
return
ÅÅ 
new
ÅÅ 
ChallengeResult
ÅÅ &
(
ÅÅ& '
provider
ÅÅ' /
,
ÅÅ/ 0

properties
ÅÅ1 ;
)
ÅÅ; <
;
ÅÅ< =
}
ÇÇ 	
[
ÑÑ 	
HttpGet
ÑÑ	 
]
ÑÑ 
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
IActionResult
ÖÖ '
>
ÖÖ' (
LinkLoginCallback
ÖÖ) :
(
ÖÖ: ;
)
ÖÖ; <
{
ÜÜ 	
var
áá 
user
áá 
=
áá 
await
áá 
_userManager
áá )
.
áá) *
GetUserAsync
áá* 6
(
áá6 7
User
áá7 ;
)
áá; <
;
áá< =
if
àà 
(
àà 
user
àà 
==
àà 
null
àà 
)
àà 
{
ââ 
throw
ää 
new
ää "
ApplicationException
ää .
(
ää. /
$"
ää/ 1+
Unable to load user with ID '
ää1 N
{
ääN O
_userManager
ääO [
.
ää[ \
	GetUserId
ää\ e
(
ääe f
User
ääf j
)
ääj k
}
ääk l
'.
ääl n
"
ään o
)
ääo p
;
ääp q
}
ãã 
var
çç 
info
çç 
=
çç 
await
çç 
_signInManager
çç +
.
çç+ ,'
GetExternalLoginInfoAsync
çç, E
(
ççE F
user
ççF J
.
ççJ K
Id
ççK M
)
ççM N
;
ççN O
if
éé 
(
éé 
info
éé 
==
éé 
null
éé 
)
éé 
{
èè 
throw
êê 
new
êê "
ApplicationException
êê .
(
êê. /
$"
êê/ 1V
HUnexpected error occurred loading external login info for user with ID '
êê1 y
{
êêy z
user
êêz ~
.
êê~ 
Idêê Å
}êêÅ Ç
'.êêÇ Ñ
"êêÑ Ö
)êêÖ Ü
;êêÜ á
}
ëë 
var
ìì 
result
ìì 
=
ìì 
await
ìì 
_userManager
ìì +
.
ìì+ ,
AddLoginAsync
ìì, 9
(
ìì9 :
user
ìì: >
,
ìì> ?
info
ìì@ D
)
ììD E
;
ììE F
if
îî 
(
îî 
!
îî 
result
îî 
.
îî 
	Succeeded
îî !
)
îî! "
{
ïï 
throw
ññ 
new
ññ "
ApplicationException
ññ .
(
ññ. /
$"
ññ/ 1P
BUnexpected error occurred adding external login for user with ID '
ññ1 s
{
ññs t
user
ññt x
.
ññx y
Id
ññy {
}
ññ{ |
'.
ññ| ~
"
ññ~ 
)ññ Ä
;ññÄ Å
}
óó 
await
öö 
HttpContext
öö 
.
öö 
SignOutAsync
öö *
(
öö* +
IdentityConstants
öö+ <
.
öö< =
ExternalScheme
öö= K
)
ööK L
;
ööL M
StatusMessage
úú 
=
úú 
$str
úú ;
;
úú; <
return
ùù 
RedirectToAction
ùù #
(
ùù# $
nameof
ùù$ *
(
ùù* +
ExternalLogins
ùù+ 9
)
ùù9 :
)
ùù: ;
;
ùù; <
}
ûû 	
[
†† 	
HttpPost
††	 
]
†† 
[
°° 	&
ValidateAntiForgeryToken
°°	 !
]
°°! "
public
¢¢ 
async
¢¢ 
Task
¢¢ 
<
¢¢ 
IActionResult
¢¢ '
>
¢¢' (
RemoveLogin
¢¢) 4
(
¢¢4 5"
RemoveLoginViewModel
¢¢5 I
model
¢¢J O
)
¢¢O P
{
££ 	
var
§§ 
user
§§ 
=
§§ 
await
§§ 
_userManager
§§ )
.
§§) *
GetUserAsync
§§* 6
(
§§6 7
User
§§7 ;
)
§§; <
;
§§< =
if
•• 
(
•• 
user
•• 
==
•• 
null
•• 
)
•• 
{
¶¶ 
throw
ßß 
new
ßß "
ApplicationException
ßß .
(
ßß. /
$"
ßß/ 1+
Unable to load user with ID '
ßß1 N
{
ßßN O
_userManager
ßßO [
.
ßß[ \
	GetUserId
ßß\ e
(
ßße f
User
ßßf j
)
ßßj k
}
ßßk l
'.
ßßl n
"
ßßn o
)
ßßo p
;
ßßp q
}
®® 
var
™™ 
result
™™ 
=
™™ 
await
™™ 
_userManager
™™ +
.
™™+ ,
RemoveLoginAsync
™™, <
(
™™< =
user
™™= A
,
™™A B
model
™™C H
.
™™H I
LoginProvider
™™I V
,
™™V W
model
™™X ]
.
™™] ^
ProviderKey
™™^ i
)
™™i j
;
™™j k
if
´´ 
(
´´ 
!
´´ 
result
´´ 
.
´´ 
	Succeeded
´´ !
)
´´! "
{
¨¨ 
throw
≠≠ 
new
≠≠ "
ApplicationException
≠≠ .
(
≠≠. /
$"
≠≠/ 1R
DUnexpected error occurred removing external login for user with ID '
≠≠1 u
{
≠≠u v
user
≠≠v z
.
≠≠z {
Id
≠≠{ }
}
≠≠} ~
'.≠≠~ Ä
"≠≠Ä Å
)≠≠Å Ç
;≠≠Ç É
}
ÆÆ 
await
∞∞ 
_signInManager
∞∞  
.
∞∞  !
SignInAsync
∞∞! ,
(
∞∞, -
user
∞∞- 1
,
∞∞1 2
isPersistent
∞∞3 ?
:
∞∞? @
false
∞∞A F
)
∞∞F G
;
∞∞G H
StatusMessage
±± 
=
±± 
$str
±± =
;
±±= >
return
≤≤ 
RedirectToAction
≤≤ #
(
≤≤# $
nameof
≤≤$ *
(
≤≤* +
ExternalLogins
≤≤+ 9
)
≤≤9 :
)
≤≤: ;
;
≤≤; <
}
≥≥ 	
[
µµ 	
HttpGet
µµ	 
]
µµ 
public
∂∂ 
async
∂∂ 
Task
∂∂ 
<
∂∂ 
IActionResult
∂∂ '
>
∂∂' (%
TwoFactorAuthentication
∂∂) @
(
∂∂@ A
)
∂∂A B
{
∑∑ 	
var
∏∏ 
user
∏∏ 
=
∏∏ 
await
∏∏ 
_userManager
∏∏ )
.
∏∏) *
GetUserAsync
∏∏* 6
(
∏∏6 7
User
∏∏7 ;
)
∏∏; <
;
∏∏< =
if
ππ 
(
ππ 
user
ππ 
==
ππ 
null
ππ 
)
ππ 
{
∫∫ 
throw
ªª 
new
ªª "
ApplicationException
ªª .
(
ªª. /
$"
ªª/ 1+
Unable to load user with ID '
ªª1 N
{
ªªN O
_userManager
ªªO [
.
ªª[ \
	GetUserId
ªª\ e
(
ªªe f
User
ªªf j
)
ªªj k
}
ªªk l
'.
ªªl n
"
ªªn o
)
ªªo p
;
ªªp q
}
ºº 
var
ææ 
model
ææ 
=
ææ 
new
ææ .
 TwoFactorAuthenticationViewModel
ææ <
{
øø 
HasAuthenticator
¿¿  
=
¿¿! "
await
¿¿# (
_userManager
¿¿) 5
.
¿¿5 6&
GetAuthenticatorKeyAsync
¿¿6 N
(
¿¿N O
user
¿¿O S
)
¿¿S T
!=
¿¿U W
null
¿¿X \
,
¿¿\ ]
Is2faEnabled
¡¡ 
=
¡¡ 
user
¡¡ #
.
¡¡# $
TwoFactorEnabled
¡¡$ 4
,
¡¡4 5
RecoveryCodesLeft
¬¬ !
=
¬¬" #
await
¬¬$ )
_userManager
¬¬* 6
.
¬¬6 7%
CountRecoveryCodesAsync
¬¬7 N
(
¬¬N O
user
¬¬O S
)
¬¬S T
,
¬¬T U
}
√√ 
;
√√ 
return
≈≈ 
View
≈≈ 
(
≈≈ 
model
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 	
[
»» 	
HttpGet
»»	 
]
»» 
public
…… 
async
…… 
Task
…… 
<
…… 
IActionResult
…… '
>
……' (
Disable2faWarning
……) :
(
……: ;
)
……; <
{
   	
var
ÀÀ 
user
ÀÀ 
=
ÀÀ 
await
ÀÀ 
_userManager
ÀÀ )
.
ÀÀ) *
GetUserAsync
ÀÀ* 6
(
ÀÀ6 7
User
ÀÀ7 ;
)
ÀÀ; <
;
ÀÀ< =
if
ÃÃ 
(
ÃÃ 
user
ÃÃ 
==
ÃÃ 
null
ÃÃ 
)
ÃÃ 
{
ÕÕ 
throw
ŒŒ 
new
ŒŒ "
ApplicationException
ŒŒ .
(
ŒŒ. /
$"
ŒŒ/ 1+
Unable to load user with ID '
ŒŒ1 N
{
ŒŒN O
_userManager
ŒŒO [
.
ŒŒ[ \
	GetUserId
ŒŒ\ e
(
ŒŒe f
User
ŒŒf j
)
ŒŒj k
}
ŒŒk l
'.
ŒŒl n
"
ŒŒn o
)
ŒŒo p
;
ŒŒp q
}
œœ 
if
—— 
(
—— 
!
—— 
user
—— 
.
—— 
TwoFactorEnabled
—— &
)
——& '
{
““ 
throw
”” 
new
”” "
ApplicationException
”” .
(
””. /
$"
””/ 1G
9Unexpected error occured disabling 2FA for user with ID '
””1 j
{
””j k
user
””k o
.
””o p
Id
””p r
}
””r s
'.
””s u
"
””u v
)
””v w
;
””w x
}
‘‘ 
return
÷÷ 
View
÷÷ 
(
÷÷ 
nameof
÷÷ 
(
÷÷ 

Disable2fa
÷÷ )
)
÷÷) *
)
÷÷* +
;
÷÷+ ,
}
◊◊ 	
[
ŸŸ 	
HttpPost
ŸŸ	 
]
ŸŸ 
[
⁄⁄ 	&
ValidateAntiForgeryToken
⁄⁄	 !
]
⁄⁄! "
public
€€ 
async
€€ 
Task
€€ 
<
€€ 
IActionResult
€€ '
>
€€' (

Disable2fa
€€) 3
(
€€3 4
)
€€4 5
{
‹‹ 	
var
›› 
user
›› 
=
›› 
await
›› 
_userManager
›› )
.
››) *
GetUserAsync
››* 6
(
››6 7
User
››7 ;
)
››; <
;
››< =
if
ﬁﬁ 
(
ﬁﬁ 
user
ﬁﬁ 
==
ﬁﬁ 
null
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
throw
‡‡ 
new
‡‡ "
ApplicationException
‡‡ .
(
‡‡. /
$"
‡‡/ 1+
Unable to load user with ID '
‡‡1 N
{
‡‡N O
_userManager
‡‡O [
.
‡‡[ \
	GetUserId
‡‡\ e
(
‡‡e f
User
‡‡f j
)
‡‡j k
}
‡‡k l
'.
‡‡l n
"
‡‡n o
)
‡‡o p
;
‡‡p q
}
·· 
var
„„ 
disable2faResult
„„  
=
„„! "
await
„„# (
_userManager
„„) 5
.
„„5 6&
SetTwoFactorEnabledAsync
„„6 N
(
„„N O
user
„„O S
,
„„S T
false
„„U Z
)
„„Z [
;
„„[ \
if
‰‰ 
(
‰‰ 
!
‰‰ 
disable2faResult
‰‰ !
.
‰‰! "
	Succeeded
‰‰" +
)
‰‰+ ,
{
ÂÂ 
throw
ÊÊ 
new
ÊÊ "
ApplicationException
ÊÊ .
(
ÊÊ. /
$"
ÊÊ/ 1G
9Unexpected error occured disabling 2FA for user with ID '
ÊÊ1 j
{
ÊÊj k
user
ÊÊk o
.
ÊÊo p
Id
ÊÊp r
}
ÊÊr s
'.
ÊÊs u
"
ÊÊu v
)
ÊÊv w
;
ÊÊw x
}
ÁÁ 
_logger
ÈÈ 
.
ÈÈ 
LogInformation
ÈÈ "
(
ÈÈ" #
$str
ÈÈ# L
,
ÈÈL M
user
ÈÈN R
.
ÈÈR S
Id
ÈÈS U
)
ÈÈU V
;
ÈÈV W
return
ÍÍ 
RedirectToAction
ÍÍ #
(
ÍÍ# $
nameof
ÍÍ$ *
(
ÍÍ* +%
TwoFactorAuthentication
ÍÍ+ B
)
ÍÍB C
)
ÍÍC D
;
ÍÍD E
}
ÎÎ 	
[
ÌÌ 	
HttpGet
ÌÌ	 
]
ÌÌ 
public
ÓÓ 
async
ÓÓ 
Task
ÓÓ 
<
ÓÓ 
IActionResult
ÓÓ '
>
ÓÓ' (!
EnableAuthenticator
ÓÓ) <
(
ÓÓ< =
)
ÓÓ= >
{
ÔÔ 	
var
 
user
 
=
 
await
 
_userManager
 )
.
) *
GetUserAsync
* 6
(
6 7
User
7 ;
)
; <
;
< =
if
ÒÒ 
(
ÒÒ 
user
ÒÒ 
==
ÒÒ 
null
ÒÒ 
)
ÒÒ 
{
ÚÚ 
throw
ÛÛ 
new
ÛÛ "
ApplicationException
ÛÛ .
(
ÛÛ. /
$"
ÛÛ/ 1+
Unable to load user with ID '
ÛÛ1 N
{
ÛÛN O
_userManager
ÛÛO [
.
ÛÛ[ \
	GetUserId
ÛÛ\ e
(
ÛÛe f
User
ÛÛf j
)
ÛÛj k
}
ÛÛk l
'.
ÛÛl n
"
ÛÛn o
)
ÛÛo p
;
ÛÛp q
}
ÙÙ 
var
ˆˆ 
unformattedKey
ˆˆ 
=
ˆˆ  
await
ˆˆ! &
_userManager
ˆˆ' 3
.
ˆˆ3 4&
GetAuthenticatorKeyAsync
ˆˆ4 L
(
ˆˆL M
user
ˆˆM Q
)
ˆˆQ R
;
ˆˆR S
if
˜˜ 
(
˜˜ 
string
˜˜ 
.
˜˜ 
IsNullOrEmpty
˜˜ $
(
˜˜$ %
unformattedKey
˜˜% 3
)
˜˜3 4
)
˜˜4 5
{
¯¯ 
await
˘˘ 
_userManager
˘˘ "
.
˘˘" #(
ResetAuthenticatorKeyAsync
˘˘# =
(
˘˘= >
user
˘˘> B
)
˘˘B C
;
˘˘C D
unformattedKey
˙˙ 
=
˙˙  
await
˙˙! &
_userManager
˙˙' 3
.
˙˙3 4&
GetAuthenticatorKeyAsync
˙˙4 L
(
˙˙L M
user
˙˙M Q
)
˙˙Q R
;
˙˙R S
}
˚˚ 
var
˝˝ 
model
˝˝ 
=
˝˝ 
new
˝˝ *
EnableAuthenticatorViewModel
˝˝ 8
{
˛˛ 
	SharedKey
ˇˇ 
=
ˇˇ 
	FormatKey
ˇˇ %
(
ˇˇ% &
unformattedKey
ˇˇ& 4
)
ˇˇ4 5
,
ˇˇ5 6
AuthenticatorUri
ÄÄ  
=
ÄÄ! "
GenerateQrCodeUri
ÄÄ# 4
(
ÄÄ4 5
user
ÄÄ5 9
.
ÄÄ9 :
Email
ÄÄ: ?
,
ÄÄ? @
unformattedKey
ÄÄA O
)
ÄÄO P
}
ÅÅ 
;
ÅÅ 
return
ÉÉ 
View
ÉÉ 
(
ÉÉ 
model
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
[
ÜÜ 	
HttpPost
ÜÜ	 
]
ÜÜ 
[
áá 	&
ValidateAntiForgeryToken
áá	 !
]
áá! "
public
àà 
async
àà 
Task
àà 
<
àà 
IActionResult
àà '
>
àà' (!
EnableAuthenticator
àà) <
(
àà< =*
EnableAuthenticatorViewModel
àà= Y
model
ààZ _
)
àà_ `
{
ââ 	
if
ää 
(
ää 
!
ää 

ModelState
ää 
.
ää 
IsValid
ää #
)
ää# $
{
ãã 
return
åå 
View
åå 
(
åå 
model
åå !
)
åå! "
;
åå" #
}
çç 
var
èè 
user
èè 
=
èè 
await
èè 
_userManager
èè )
.
èè) *
GetUserAsync
èè* 6
(
èè6 7
User
èè7 ;
)
èè; <
;
èè< =
if
êê 
(
êê 
user
êê 
==
êê 
null
êê 
)
êê 
{
ëë 
throw
íí 
new
íí "
ApplicationException
íí .
(
íí. /
$"
íí/ 1+
Unable to load user with ID '
íí1 N
{
ííN O
_userManager
ííO [
.
íí[ \
	GetUserId
íí\ e
(
ííe f
User
ííf j
)
ííj k
}
íík l
'.
ííl n
"
íín o
)
íío p
;
ííp q
}
ìì 
var
ññ 
verificationCode
ññ  
=
ññ! "
model
ññ# (
.
ññ( )
Code
ññ) -
.
ññ- .
Replace
ññ. 5
(
ññ5 6
$str
ññ6 9
,
ññ9 :
string
ññ; A
.
ññA B
Empty
ññB G
)
ññG H
.
ññH I
Replace
ññI P
(
ññP Q
$str
ññQ T
,
ññT U
string
ññV \
.
ññ\ ]
Empty
ññ] b
)
ññb c
;
ññc d
var
òò 
is2faTokenValid
òò 
=
òò  !
await
òò" '
_userManager
òò( 4
.
òò4 5'
VerifyTwoFactorTokenAsync
òò5 N
(
òòN O
user
ôô 
,
ôô 
_userManager
ôô "
.
ôô" #
Options
ôô# *
.
ôô* +
Tokens
ôô+ 1
.
ôô1 2(
AuthenticatorTokenProvider
ôô2 L
,
ôôL M
verificationCode
ôôN ^
)
ôô^ _
;
ôô_ `
if
õõ 
(
õõ 
!
õõ 
is2faTokenValid
õõ  
)
õõ  !
{
úú 

ModelState
ùù 
.
ùù 
AddModelError
ùù (
(
ùù( )
$str
ùù) 5
,
ùù5 6
$str
ùù7 V
)
ùùV W
;
ùùW X
return
ûû 
View
ûû 
(
ûû 
model
ûû !
)
ûû! "
;
ûû" #
}
üü 
await
°° 
_userManager
°° 
.
°° &
SetTwoFactorEnabledAsync
°° 7
(
°°7 8
user
°°8 <
,
°°< =
true
°°> B
)
°°B C
;
°°C D
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ "
(
¢¢" #
$str
¢¢# e
,
¢¢e f
user
¢¢g k
.
¢¢k l
Id
¢¢l n
)
¢¢n o
;
¢¢o p
return
££ 
RedirectToAction
££ #
(
££# $
nameof
££$ *
(
££* +#
GenerateRecoveryCodes
££+ @
)
££@ A
)
££A B
;
££B C
}
§§ 	
[
¶¶ 	
HttpGet
¶¶	 
]
¶¶ 
public
ßß 
IActionResult
ßß '
ResetAuthenticatorWarning
ßß 6
(
ßß6 7
)
ßß7 8
{
®® 	
return
©© 
View
©© 
(
©© 
nameof
©© 
(
©©  
ResetAuthenticator
©© 1
)
©©1 2
)
©©2 3
;
©©3 4
}
™™ 	
[
¨¨ 	
HttpPost
¨¨	 
]
¨¨ 
[
≠≠ 	&
ValidateAntiForgeryToken
≠≠	 !
]
≠≠! "
public
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
<
ÆÆ 
IActionResult
ÆÆ '
>
ÆÆ' ( 
ResetAuthenticator
ÆÆ) ;
(
ÆÆ; <
)
ÆÆ< =
{
ØØ 	
var
∞∞ 
user
∞∞ 
=
∞∞ 
await
∞∞ 
_userManager
∞∞ )
.
∞∞) *
GetUserAsync
∞∞* 6
(
∞∞6 7
User
∞∞7 ;
)
∞∞; <
;
∞∞< =
if
±± 
(
±± 
user
±± 
==
±± 
null
±± 
)
±± 
{
≤≤ 
throw
≥≥ 
new
≥≥ "
ApplicationException
≥≥ .
(
≥≥. /
$"
≥≥/ 1+
Unable to load user with ID '
≥≥1 N
{
≥≥N O
_userManager
≥≥O [
.
≥≥[ \
	GetUserId
≥≥\ e
(
≥≥e f
User
≥≥f j
)
≥≥j k
}
≥≥k l
'.
≥≥l n
"
≥≥n o
)
≥≥o p
;
≥≥p q
}
¥¥ 
await
∂∂ 
_userManager
∂∂ 
.
∂∂ &
SetTwoFactorEnabledAsync
∂∂ 7
(
∂∂7 8
user
∂∂8 <
,
∂∂< =
false
∂∂> C
)
∂∂C D
;
∂∂D E
await
∑∑ 
_userManager
∑∑ 
.
∑∑ (
ResetAuthenticatorKeyAsync
∑∑ 9
(
∑∑9 :
user
∑∑: >
)
∑∑> ?
;
∑∑? @
_logger
∏∏ 
.
∏∏ 
LogInformation
∏∏ "
(
∏∏" #
$str
∏∏# d
,
∏∏d e
user
∏∏f j
.
∏∏j k
Id
∏∏k m
)
∏∏m n
;
∏∏n o
return
∫∫ 
RedirectToAction
∫∫ #
(
∫∫# $
nameof
∫∫$ *
(
∫∫* +!
EnableAuthenticator
∫∫+ >
)
∫∫> ?
)
∫∫? @
;
∫∫@ A
}
ªª 	
[
ΩΩ 	
HttpGet
ΩΩ	 
]
ΩΩ 
public
ææ 
async
ææ 
Task
ææ 
<
ææ 
IActionResult
ææ '
>
ææ' (#
GenerateRecoveryCodes
ææ) >
(
ææ> ?
)
ææ? @
{
øø 	
var
¿¿ 
user
¿¿ 
=
¿¿ 
await
¿¿ 
_userManager
¿¿ )
.
¿¿) *
GetUserAsync
¿¿* 6
(
¿¿6 7
User
¿¿7 ;
)
¿¿; <
;
¿¿< =
if
¡¡ 
(
¡¡ 
user
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ "
ApplicationException
√√ .
(
√√. /
$"
√√/ 1+
Unable to load user with ID '
√√1 N
{
√√N O
_userManager
√√O [
.
√√[ \
	GetUserId
√√\ e
(
√√e f
User
√√f j
)
√√j k
}
√√k l
'.
√√l n
"
√√n o
)
√√o p
;
√√p q
}
ƒƒ 
if
∆∆ 
(
∆∆ 
!
∆∆ 
user
∆∆ 
.
∆∆ 
TwoFactorEnabled
∆∆ &
)
∆∆& '
{
«« 
throw
»» 
new
»» "
ApplicationException
»» .
(
»». /
$"
»»/ 1?
1Cannot generate recovery codes for user with ID '
»»1 b
{
»»b c
user
»»c g
.
»»g h
Id
»»h j
}
»»j k1
"' as they do not have 2FA enabled.»»k ç
"»»ç é
)»»é è
;»»è ê
}
…… 
var
ÀÀ 
recoveryCodes
ÀÀ 
=
ÀÀ 
await
ÀÀ  %
_userManager
ÀÀ& 2
.
ÀÀ2 34
&GenerateNewTwoFactorRecoveryCodesAsync
ÀÀ3 Y
(
ÀÀY Z
user
ÀÀZ ^
,
ÀÀ^ _
$num
ÀÀ` b
)
ÀÀb c
;
ÀÀc d
var
ÃÃ 
model
ÃÃ 
=
ÃÃ 
new
ÃÃ ,
GenerateRecoveryCodesViewModel
ÃÃ :
{
ÃÃ; <
RecoveryCodes
ÃÃ= J
=
ÃÃK L
recoveryCodes
ÃÃM Z
.
ÃÃZ [
ToArray
ÃÃ[ b
(
ÃÃb c
)
ÃÃc d
}
ÃÃe f
;
ÃÃf g
_logger
ŒŒ 
.
ŒŒ 
LogInformation
ŒŒ "
(
ŒŒ" #
$str
ŒŒ# `
,
ŒŒ` a
user
ŒŒb f
.
ŒŒf g
Id
ŒŒg i
)
ŒŒi j
;
ŒŒj k
return
–– 
View
–– 
(
–– 
model
–– 
)
–– 
;
–– 
}
—— 	
private
’’ 
void
’’ 
	AddErrors
’’ 
(
’’ 
IdentityResult
’’ -
result
’’. 4
)
’’4 5
{
÷÷ 	
foreach
◊◊ 
(
◊◊ 
var
◊◊ 
error
◊◊ 
in
◊◊ !
result
◊◊" (
.
◊◊( )
Errors
◊◊) /
)
◊◊/ 0
{
ÿÿ 

ModelState
ŸŸ 
.
ŸŸ 
AddModelError
ŸŸ (
(
ŸŸ( )
string
ŸŸ) /
.
ŸŸ/ 0
Empty
ŸŸ0 5
,
ŸŸ5 6
error
ŸŸ7 <
.
ŸŸ< =
Description
ŸŸ= H
)
ŸŸH I
;
ŸŸI J
}
⁄⁄ 
}
€€ 	
private
›› 
string
›› 
	FormatKey
››  
(
››  !
string
››! '
unformattedKey
››( 6
)
››6 7
{
ﬁﬁ 	
var
ﬂﬂ 
result
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ 
StringBuilder
ﬂﬂ *
(
ﬂﬂ* +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
int
‡‡ 
currentPosition
‡‡ 
=
‡‡  !
$num
‡‡" #
;
‡‡# $
while
·· 
(
·· 
currentPosition
·· "
+
··# $
$num
··% &
<
··' (
unformattedKey
··) 7
.
··7 8
Length
··8 >
)
··> ?
{
‚‚ 
result
„„ 
.
„„ 
Append
„„ 
(
„„ 
unformattedKey
„„ ,
.
„„, -
	Substring
„„- 6
(
„„6 7
currentPosition
„„7 F
,
„„F G
$num
„„H I
)
„„I J
)
„„J K
.
„„K L
Append
„„L R
(
„„R S
$str
„„S V
)
„„V W
;
„„W X
currentPosition
‰‰ 
+=
‰‰  "
$num
‰‰# $
;
‰‰$ %
}
ÂÂ 
if
ÊÊ 
(
ÊÊ 
currentPosition
ÊÊ 
<
ÊÊ  !
unformattedKey
ÊÊ" 0
.
ÊÊ0 1
Length
ÊÊ1 7
)
ÊÊ7 8
{
ÁÁ 
result
ËË 
.
ËË 
Append
ËË 
(
ËË 
unformattedKey
ËË ,
.
ËË, -
	Substring
ËË- 6
(
ËË6 7
currentPosition
ËË7 F
)
ËËF G
)
ËËG H
;
ËËH I
}
ÈÈ 
return
ÎÎ 
result
ÎÎ 
.
ÎÎ 
ToString
ÎÎ "
(
ÎÎ" #
)
ÎÎ# $
.
ÎÎ$ %
ToLowerInvariant
ÎÎ% 5
(
ÎÎ5 6
)
ÎÎ6 7
;
ÎÎ7 8
}
ÏÏ 	
private
ÓÓ 
string
ÓÓ 
GenerateQrCodeUri
ÓÓ (
(
ÓÓ( )
string
ÓÓ) /
email
ÓÓ0 5
,
ÓÓ5 6
string
ÓÓ7 =
unformattedKey
ÓÓ> L
)
ÓÓL M
{
ÔÔ 	
return
 
string
 
.
 
Format
  
(
  !#
AuthenicatorUriFormat
ÒÒ %
,
ÒÒ% &
_urlEncoder
ÚÚ 
.
ÚÚ 
Encode
ÚÚ "
(
ÚÚ" #
$str
ÚÚ# 1
)
ÚÚ1 2
,
ÚÚ2 3
_urlEncoder
ÛÛ 
.
ÛÛ 
Encode
ÛÛ "
(
ÛÛ" #
email
ÛÛ# (
)
ÛÛ( )
,
ÛÛ) *
unformattedKey
ÙÙ 
)
ÙÙ 
;
ÙÙ  
}
ıı 	
}
¯¯ 
}˘˘ ÁM
WC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\RouteNodesController.cs
	namespace 	
Presentation
 
. 
Controllers "
{ 
public 

class  
RouteNodesController %
:& '

Controller( 2
{ 
private 
readonly 
DatabaseContext (
_context) 1
;1 2
public  
RouteNodesController #
(# $
DatabaseContext$ 3
context4 ;
); <
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Index) .
(. /
)/ 0
{ 	
return 
View 
( 
await 
_context &
.& '
Set' *
<* +
	RouteNode+ 4
>4 5
(5 6
)6 7
.7 8
ToListAsync8 C
(C D
)D E
)E F
;F G
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Details) 0
(0 1
Guid1 5
?5 6
id7 9
)9 :
{ 	
if   
(   
id   
==   
null   
)   
{!! 
return"" 
NotFound"" 
(""  
)""  !
;""! "
}## 
var%% 
	routeNode%% 
=%% 
await%% !
_context%%" *
.%%* +

RouteNodes%%+ 5
.&&  
SingleOrDefaultAsync&& %
(&&% &
m&&& '
=>&&( *
m&&+ ,
.&&, -
Id&&- /
==&&0 2
id&&3 5
)&&5 6
;&&6 7
if'' 
('' 
	routeNode'' 
=='' 
null'' !
)''! "
{(( 
return)) 
NotFound)) 
())  
)))  !
;))! "
}** 
return,, 
View,, 
(,, 
	routeNode,, !
),,! "
;,," #
}-- 	
public00 
IActionResult00 
Create00 #
(00# $
)00$ %
{11 	
return22 
View22 
(22 
)22 
;22 
}33 	
[88 	
HttpPost88	 
]88 
[99 	$
ValidateAntiForgeryToken99	 !
]99! "
public:: 
async:: 
Task:: 
<:: 
IActionResult:: '
>::' (
Create::) /
(::/ 0
[::0 1
Bind::1 5
(::5 6
$str	::6 Ã
)
::Ã Õ
]
::Õ Œ
	RouteNode
::œ ÿ
	routeNode
::Ÿ ‚
)
::‚ „
{;; 	
if<< 
(<< 

ModelState<< 
.<< 
IsValid<< "
)<<" #
{== 
	routeNode>> 
.>> 
Id>> 
=>> 
Guid>> #
.>># $
NewGuid>>$ +
(>>+ ,
)>>, -
;>>- .
_context?? 
.?? 
Add?? 
(?? 
	routeNode?? &
)??& '
;??' (
await@@ 
_context@@ 
.@@ 
SaveChangesAsync@@ /
(@@/ 0
)@@0 1
;@@1 2
returnAA 
RedirectToActionAA '
(AA' (
nameofAA( .
(AA. /
IndexAA/ 4
)AA4 5
)AA5 6
;AA6 7
}BB 
returnCC 
ViewCC 
(CC 
	routeNodeCC !
)CC! "
;CC" #
}DD 	
publicGG 
asyncGG 
TaskGG 
<GG 
IActionResultGG '
>GG' (
EditGG) -
(GG- .
GuidGG. 2
?GG2 3
idGG4 6
)GG6 7
{HH 	
ifII 
(II 
idII 
==II 
nullII 
)II 
{JJ 
returnKK 
NotFoundKK 
(KK  
)KK  !
;KK! "
}LL 
varNN 
	routeNodeNN 
=NN 
awaitNN !
_contextNN" *
.NN* +

RouteNodesNN+ 5
.NN5 6 
SingleOrDefaultAsyncNN6 J
(NNJ K
mNNK L
=>NNM O
mNNP Q
.NNQ R
IdNNR T
==NNU W
idNNX Z
)NNZ [
;NN[ \
ifOO 
(OO 
	routeNodeOO 
==OO 
nullOO !
)OO! "
{PP 
returnQQ 
NotFoundQQ 
(QQ  
)QQ  !
;QQ! "
}RR 
returnSS 
ViewSS 
(SS 
	routeNodeSS !
)SS! "
;SS" #
}TT 	
[YY 	
HttpPostYY	 
]YY 
[ZZ 	$
ValidateAntiForgeryTokenZZ	 !
]ZZ! "
public[[ 
async[[ 
Task[[ 
<[[ 
IActionResult[[ '
>[[' (
Edit[[) -
([[- .
Guid[[. 2
id[[3 5
,[[5 6
[[[7 8
Bind[[8 <
([[< =
$str	[[= ”
)
[[” ‘
]
[[‘ ’
	RouteNode
[[÷ ﬂ
	routeNode
[[‡ È
)
[[È Í
{\\ 	
if]] 
(]] 
id]] 
!=]] 
	routeNode]] 
.]]  
Id]]  "
)]]" #
{^^ 
return__ 
NotFound__ 
(__  
)__  !
;__! "
}`` 
ifbb 
(bb 

ModelStatebb 
.bb 
IsValidbb "
)bb" #
{cc 
trydd 
{ee 
_contextff 
.ff 
Updateff #
(ff# $
	routeNodeff$ -
)ff- .
;ff. /
awaitgg 
_contextgg "
.gg" #
SaveChangesAsyncgg# 3
(gg3 4
)gg4 5
;gg5 6
}hh 
catchii 
(ii (
DbUpdateConcurrencyExceptionii 3
)ii3 4
{jj 
ifkk 
(kk 
!kk 
RouteNodeExistskk (
(kk( )
	routeNodekk) 2
.kk2 3
Idkk3 5
)kk5 6
)kk6 7
{ll 
returnmm 
NotFoundmm '
(mm' (
)mm( )
;mm) *
}nn 
elseoo 
{pp 
throwqq 
;qq 
}rr 
}ss 
returntt 
RedirectToActiontt '
(tt' (
nameoftt( .
(tt. /
Indextt/ 4
)tt4 5
)tt5 6
;tt6 7
}uu 
returnvv 
Viewvv 
(vv 
	routeNodevv !
)vv! "
;vv" #
}ww 	
publiczz 
asynczz 
Taskzz 
<zz 
IActionResultzz '
>zz' (
Deletezz) /
(zz/ 0
Guidzz0 4
?zz4 5
idzz6 8
)zz8 9
{{{ 	
if|| 
(|| 
id|| 
==|| 
null|| 
)|| 
{}} 
return~~ 
NotFound~~ 
(~~  
)~~  !
;~~! "
} 
var
ÅÅ 
	routeNode
ÅÅ 
=
ÅÅ 
await
ÅÅ !
_context
ÅÅ" *
.
ÅÅ* +

RouteNodes
ÅÅ+ 5
.
ÇÇ "
SingleOrDefaultAsync
ÇÇ %
(
ÇÇ% &
m
ÇÇ& '
=>
ÇÇ( *
m
ÇÇ+ ,
.
ÇÇ, -
Id
ÇÇ- /
==
ÇÇ0 2
id
ÇÇ3 5
)
ÇÇ5 6
;
ÇÇ6 7
if
ÉÉ 
(
ÉÉ 
	routeNode
ÉÉ 
==
ÉÉ 
null
ÉÉ !
)
ÉÉ! "
{
ÑÑ 
return
ÖÖ 
NotFound
ÖÖ 
(
ÖÖ  
)
ÖÖ  !
;
ÖÖ! "
}
ÜÜ 
return
àà 
View
àà 
(
àà 
	routeNode
àà !
)
àà! "
;
àà" #
}
ââ 	
[
åå 	
HttpPost
åå	 
,
åå 

ActionName
åå 
(
åå 
$str
åå &
)
åå& '
]
åå' (
[
çç 	&
ValidateAntiForgeryToken
çç	 !
]
çç! "
public
éé 
async
éé 
Task
éé 
<
éé 
IActionResult
éé '
>
éé' (
DeleteConfirmed
éé) 8
(
éé8 9
Guid
éé9 =
id
éé> @
)
éé@ A
{
èè 	
var
êê 
	routeNode
êê 
=
êê 
await
êê !
_context
êê" *
.
êê* +

RouteNodes
êê+ 5
.
êê5 6"
SingleOrDefaultAsync
êê6 J
(
êêJ K
m
êêK L
=>
êêM O
m
êêP Q
.
êêQ R
Id
êêR T
==
êêU W
id
êêX Z
)
êêZ [
;
êê[ \
_context
ëë 
.
ëë 

RouteNodes
ëë 
.
ëë  
Remove
ëë  &
(
ëë& '
	routeNode
ëë' 0
)
ëë0 1
;
ëë1 2
await
íí 
_context
íí 
.
íí 
SaveChangesAsync
íí +
(
íí+ ,
)
íí, -
;
íí- .
return
ìì 
RedirectToAction
ìì #
(
ìì# $
nameof
ìì$ *
(
ìì* +
Index
ìì+ 0
)
ìì0 1
)
ìì1 2
;
ìì2 3
}
îî 	
private
ññ 
bool
ññ 
RouteNodeExists
ññ $
(
ññ$ %
Guid
ññ% )
id
ññ* ,
)
ññ, -
{
óó 	
return
òò 
_context
òò 
.
òò 

RouteNodes
òò &
.
òò& '
Any
òò' *
(
òò* +
e
òò+ ,
=>
òò- /
e
òò0 1
.
òò1 2
Id
òò2 4
==
òò5 7
id
òò8 :
)
òò: ;
;
òò; <
}
ôô 	
}
öö 
}õõ ür
UC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\StationsController.cs
	namespace 	
Presentation
 
. 
Controllers "
{ 
public 

class 
StationsController #
:$ %

Controller& 0
{ 
private 
readonly 
DatabaseContext (
_context) 1
;1 2
public 
StationsController !
(! "
DatabaseContext" 1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Index) .
(. /
string/ 5
	sortOrder6 ?
,? @
stringA G
searchStringH T
,T U
stringV \
currentFilter] j
,j k
intl o
?o p
pageq u
)u v
{ 	
ViewData 
[ 
$str #
]# $
=% &
String' -
.- .
IsNullOrEmpty. ;
(; <
	sortOrder< E
)E F
?G H
$strI T
:U V
$strW Y
;Y Z
ViewData 
[ 
$str +
]+ ,
=- .
	sortOrder/ 8
==9 ;
$str< J
?K L
$strM `
:a b
$strc q
;q r
ViewData 
[ 
$str $
]$ %
=& '
searchString( 4
;4 5
ViewData 
[ 
$str "
]" #
=$ %
	sortOrder& /
;/ 0
int 
pageSize 
= 
$num 
; 
if 
( 
searchString 
!= 
null  $
)$ %
{   
page!! 
=!! 
$num!! 
;!! 
}"" 
else## 
{$$ 
searchString%% 
=%% 
currentFilter%% ,
;%%, -
}&& 
var(( 
stations(( 
=(( 
from(( 
s((  !
in((" $
_context((% -
.((- .
Stations((. 6
select)) !
s))" #
;))# $
if++ 
(++ 
!++ 
String++ 
.++ 
IsNullOrEmpty++ %
(++% &
searchString++& 2
)++2 3
)++3 4
{,, 
stations-- 
=-- 
stations-- #
.--# $
Where--$ )
(--) *
s--* +
=>--, .
s--/ 0
.--0 1
Name--1 5
.--5 6

StartsWith--6 @
(--@ A
searchString--A M
)--M N
||..' )
s..* +
...+ ,
OfficialCode.., 8
...8 9
ToString..9 A
(..A B
)..B C
...C D

StartsWith..D N
(..N O
searchString..O [
)..[ \
||//' )
s//* +
.//+ ,
Name//, 0
.//0 1
Contains//1 9
(//9 :
searchString//: F
)//F G
||00' )
s00* +
.00+ ,
OfficialCode00, 8
.008 9
ToString009 A
(00A B
)00B C
.00C D
Contains00D L
(00L M
searchString00M Y
)00Y Z
)00Z [
.00[ \
OrderBy00\ c
(00c d
s11* +
=>11, .
s11/ 0
.110 1
Name111 5
.115 6

StartsWith116 @
(11@ A
searchString11A M
)11M N
)11N O
;11O P
}22 
switch44 
(44 
	sortOrder44 
)44 
{55 
case66 
$str66  
:66  !
stations77 
=77 
stations77 '
.77' (
OrderByDescending77( 9
(779 :
s77: ;
=>77< >
s77? @
.77@ A
Name77A E
)77E F
;77F G
break88 
;88 
case99 
$str99 #
:99# $
stations:: 
=:: 
stations:: '
.::' (
OrderBy::( /
(::/ 0
s::0 1
=>::2 4
s::5 6
.::6 7
OfficialCode::7 C
)::C D
;::D E
break;; 
;;; 
case<< 
$str<< (
:<<( )
stations== 
=== 
stations== '
.==' (
OrderByDescending==( 9
(==9 :
s==: ;
=>==< >
s==? @
.==@ A
OfficialCode==A M
)==M N
;==N O
break>> 
;>> 
default?? 
:?? 
stations@@ 
=@@ 
stations@@ '
.@@' (
OrderBy@@( /
(@@/ 0
s@@0 1
=>@@2 4
s@@5 6
.@@6 7
Name@@7 ;
)@@; <
;@@< =
breakAA 
;AA 
}BB 
returnDD 
ViewDD 
(DD 
awaitDD 
PaginatedListDD +
<DD+ ,
StationDD, 3
>DD3 4
.DD4 5
CreateAsyncDD5 @
(DD@ A
stationsDDA I
.DDI J
AsNoTrackingDDJ V
(DDV W
)DDW X
,DDX Y
pageDDZ ^
??DD_ a
$numDDb c
,DDc d
pageSizeDDe m
)DDm n
)DDn o
;DDo p
}EE 	
publicHH 
asyncHH 
TaskHH 
<HH 
IActionResultHH '
>HH' (
DetailsHH) 0
(HH0 1
GuidHH1 5
?HH5 6
idHH7 9
)HH9 :
{II 	
ifJJ 
(JJ 
idJJ 
==JJ 
nullJJ 
)JJ 
{KK 
returnLL 
NotFoundLL 
(LL  
)LL  !
;LL! "
}MM 
varOO 
stationOO 
=OO 
awaitOO 
_contextOO  (
.OO( )
StationsOO) 1
.PP  
SingleOrDefaultAsyncPP %
(PP% &
mPP& '
=>PP( *
mPP+ ,
.PP, -
IdPP- /
==PP0 2
idPP3 5
)PP5 6
;PP6 7
ifQQ 
(QQ 
stationQQ 
==QQ 
nullQQ 
)QQ  
{RR 
returnSS 
NotFoundSS 
(SS  
)SS  !
;SS! "
}TT 
returnVV 
ViewVV 
(VV 
stationVV 
)VV  
;VV  !
}WW 	
publicZZ 
IActionResultZZ 
CreateZZ #
(ZZ# $
)ZZ$ %
{[[ 	
return\\ 
View\\ 
(\\ 
)\\ 
;\\ 
}]] 	
[bb 	
HttpPostbb	 
]bb 
[cc 	$
ValidateAntiForgeryTokencc	 !
]cc! "
publicdd 
asyncdd 
Taskdd 
<dd 
IActionResultdd '
>dd' (
Createdd) /
(dd/ 0
[dd0 1
Binddd1 5
(dd5 6
$strdd6 L
)ddL M
]ddM N
StationddO V
stationddW ^
)dd^ _
{ee 	
ifff 
(ff 

ModelStateff 
.ff 
IsValidff "
)ff" #
{gg 
stationhh 
.hh 
Idhh 
=hh 
Guidhh !
.hh! "
NewGuidhh" )
(hh) *
)hh* +
;hh+ ,
_contextii 
.ii 
Addii 
(ii 
stationii $
)ii$ %
;ii% &
awaitjj 
_contextjj 
.jj 
SaveChangesAsyncjj /
(jj/ 0
)jj0 1
;jj1 2
returnkk 
RedirectToActionkk '
(kk' (
nameofkk( .
(kk. /
Indexkk/ 4
)kk4 5
)kk5 6
;kk6 7
}ll 
returnmm 
Viewmm 
(mm 
stationmm 
)mm  
;mm  !
}nn 	
publicqq 
asyncqq 
Taskqq 
<qq 
IActionResultqq '
>qq' (
Editqq) -
(qq- .
Guidqq. 2
?qq2 3
idqq4 6
)qq6 7
{rr 	
ifss 
(ss 
idss 
==ss 
nullss 
)ss 
{tt 
returnuu 
NotFounduu 
(uu  
)uu  !
;uu! "
}vv 
varxx 
stationxx 
=xx 
awaitxx 
_contextxx  (
.xx( )
Stationsxx) 1
.xx1 2 
SingleOrDefaultAsyncxx2 F
(xxF G
mxxG H
=>xxI K
mxxL M
.xxM N
IdxxN P
==xxQ S
idxxT V
)xxV W
;xxW X
ifyy 
(yy 
stationyy 
==yy 
nullyy 
)yy  
{zz 
return{{ 
NotFound{{ 
({{  
){{  !
;{{! "
}|| 
return}} 
View}} 
(}} 
station}} 
)}}  
;}}  !
}~~ 	
[
ÉÉ 	
HttpPost
ÉÉ	 
]
ÉÉ 
[
ÑÑ 	&
ValidateAntiForgeryToken
ÑÑ	 !
]
ÑÑ! "
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
IActionResult
ÖÖ '
>
ÖÖ' (
Edit
ÖÖ) -
(
ÖÖ- .
Guid
ÖÖ. 2
id
ÖÖ3 5
,
ÖÖ5 6
[
ÖÖ7 8
Bind
ÖÖ8 <
(
ÖÖ< =
$str
ÖÖ= S
)
ÖÖS T
]
ÖÖT U
Station
ÖÖV ]
station
ÖÖ^ e
)
ÖÖe f
{
ÜÜ 	
if
áá 
(
áá 
id
áá 
!=
áá 
station
áá 
.
áá 
Id
áá  
)
áá  !
{
àà 
return
ââ 
NotFound
ââ 
(
ââ  
)
ââ  !
;
ââ! "
}
ää 
if
åå 
(
åå 

ModelState
åå 
.
åå 
IsValid
åå "
)
åå" #
{
çç 
try
éé 
{
èè 
_context
êê 
.
êê 
Update
êê #
(
êê# $
station
êê$ +
)
êê+ ,
;
êê, -
await
ëë 
_context
ëë "
.
ëë" #
SaveChangesAsync
ëë# 3
(
ëë3 4
)
ëë4 5
;
ëë5 6
}
íí 
catch
ìì 
(
ìì *
DbUpdateConcurrencyException
ìì 3
)
ìì3 4
{
îî 
if
ïï 
(
ïï 
!
ïï 
StationExists
ïï &
(
ïï& '
station
ïï' .
.
ïï. /
Id
ïï/ 1
)
ïï1 2
)
ïï2 3
{
ññ 
return
óó 
NotFound
óó '
(
óó' (
)
óó( )
;
óó) *
}
òò 
else
ôô 
{
öö 
throw
õõ 
;
õõ 
}
úú 
}
ùù 
return
ûû 
RedirectToAction
ûû '
(
ûû' (
nameof
ûû( .
(
ûû. /
Index
ûû/ 4
)
ûû4 5
)
ûû5 6
;
ûû6 7
}
üü 
return
†† 
View
†† 
(
†† 
station
†† 
)
††  
;
††  !
}
°° 	
public
§§ 
async
§§ 
Task
§§ 
<
§§ 
IActionResult
§§ '
>
§§' (
Delete
§§) /
(
§§/ 0
Guid
§§0 4
?
§§4 5
id
§§6 8
)
§§8 9
{
•• 	
if
¶¶ 
(
¶¶ 
id
¶¶ 
==
¶¶ 
null
¶¶ 
)
¶¶ 
{
ßß 
return
®® 
NotFound
®® 
(
®®  
)
®®  !
;
®®! "
}
©© 
var
´´ 
station
´´ 
=
´´ 
await
´´ 
_context
´´  (
.
´´( )
Stations
´´) 1
.
¨¨ "
SingleOrDefaultAsync
¨¨ %
(
¨¨% &
m
¨¨& '
=>
¨¨( *
m
¨¨+ ,
.
¨¨, -
Id
¨¨- /
==
¨¨0 2
id
¨¨3 5
)
¨¨5 6
;
¨¨6 7
if
≠≠ 
(
≠≠ 
station
≠≠ 
==
≠≠ 
null
≠≠ 
)
≠≠  
{
ÆÆ 
return
ØØ 
NotFound
ØØ 
(
ØØ  
)
ØØ  !
;
ØØ! "
}
∞∞ 
return
≤≤ 
View
≤≤ 
(
≤≤ 
station
≤≤ 
)
≤≤  
;
≤≤  !
}
≥≥ 	
[
∂∂ 	
HttpPost
∂∂	 
,
∂∂ 

ActionName
∂∂ 
(
∂∂ 
$str
∂∂ &
)
∂∂& '
]
∂∂' (
[
∑∑ 	&
ValidateAntiForgeryToken
∑∑	 !
]
∑∑! "
public
∏∏ 
async
∏∏ 
Task
∏∏ 
<
∏∏ 
IActionResult
∏∏ '
>
∏∏' (
DeleteConfirmed
∏∏) 8
(
∏∏8 9
Guid
∏∏9 =
id
∏∏> @
)
∏∏@ A
{
ππ 	
var
∫∫ 
station
∫∫ 
=
∫∫ 
await
∫∫ 
_context
∫∫  (
.
∫∫( )
Stations
∫∫) 1
.
∫∫1 2"
SingleOrDefaultAsync
∫∫2 F
(
∫∫F G
m
∫∫G H
=>
∫∫I K
m
∫∫L M
.
∫∫M N
Id
∫∫N P
==
∫∫Q S
id
∫∫T V
)
∫∫V W
;
∫∫W X
_context
ªª 
.
ªª 
Stations
ªª 
.
ªª 
Remove
ªª $
(
ªª$ %
station
ªª% ,
)
ªª, -
;
ªª- .
await
ºº 
_context
ºº 
.
ºº 
SaveChangesAsync
ºº +
(
ºº+ ,
)
ºº, -
;
ºº- .
return
ΩΩ 
RedirectToAction
ΩΩ #
(
ΩΩ# $
nameof
ΩΩ$ *
(
ΩΩ* +
Index
ΩΩ+ 0
)
ΩΩ0 1
)
ΩΩ1 2
;
ΩΩ2 3
}
ææ 	
private
¿¿ 
bool
¿¿ 
StationExists
¿¿ "
(
¿¿" #
Guid
¿¿# '
id
¿¿( *
)
¿¿* +
{
¡¡ 	
return
¬¬ 
_context
¬¬ 
.
¬¬ 
Stations
¬¬ $
.
¬¬$ %
Any
¬¬% (
(
¬¬( )
e
¬¬) *
=>
¬¬+ -
e
¬¬. /
.
¬¬/ 0
Id
¬¬0 2
==
¬¬3 5
id
¬¬6 8
)
¬¬8 9
;
¬¬9 :
}
√√ 	
}
ƒƒ 
}≈≈ öW
TC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\TicketsController.cs
	namespace 	
Presentation
 
. 
Controllers "
{ 
public 

class 
TicketsController "
:# $

Controller% /
{ 
private 
readonly 
DatabaseContext (
_context) 1
;1 2
public 
TicketsController  
(  !
DatabaseContext! 0
context1 8
)8 9
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Index) .
(. /
)/ 0
{ 	
return 
View 
( 
await 
_context &
.& '
Tickets' .
.. /
ToListAsync/ :
(: ;
); <
)< =
;= >
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Details) 0
(0 1
Guid1 5
?5 6
id7 9
)9 :
{ 	
if   
(   
id   
==   
null   
)   
{!! 
return"" 
NotFound"" 
(""  
)""  !
;""! "
}## 
var%% 
ticket%% 
=%% 
await%% 
_context%% '
.%%' (
Tickets%%( /
.&&  
SingleOrDefaultAsync&& %
(&&% &
m&&& '
=>&&( *
m&&+ ,
.&&, -
Id&&- /
==&&0 2
id&&3 5
)&&5 6
;&&6 7
if'' 
('' 
ticket'' 
=='' 
null'' 
)'' 
{(( 
return)) 
NotFound)) 
())  
)))  !
;))! "
}** 
return,, 
View,, 
(,, 
ticket,, 
),, 
;,,  
}-- 	
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
GetRoute//) 1
(//1 2
int//2 5
originStationCode//6 G
,//G H
int//I L"
destinationStationCode//M c
)//c d
{00 	
RouteFinder11 
routeFinder11 #
=11$ %
new11& )
RouteFinder11* 5
(115 6
_context116 >
)11> ?
;11? @
List22 
<22 
string22 
>22 
trains22 
=22  !
routeFinder22" -
.22- .
	GetTrains22. 7
(227 8
originStationCode228 I
,22I J"
destinationStationCode22K a
)22a b
;22b c
ViewBag44 
.44 
Total44 
=44 
trains44 "
.44" #
Count44# (
(44( )
)44) *
;44* +
ViewBag55 
.55 
Origin55 
=55 
originStationCode55 .
;55. /
ViewBag66 
.66 
Destination66 
=66  !"
destinationStationCode66" 8
;668 9
return77 
View77 
(77 
trains77 
)77 
;77  
}99 	
public<< 
IActionResult<< 
Create<< #
(<<# $
)<<$ %
{== 	
return>> 
View>> 
(>> 
)>> 
;>> 
}?? 	
[DD 	
HttpPostDD	 
]DD 
[EE 	$
ValidateAntiForgeryTokenEE	 !
]EE! "
publicFF 
asyncFF 
TaskFF 
<FF 
IActionResultFF '
>FF' (
CreateFF) /
(FF/ 0
[FF0 1
BindFF1 5
(FF5 6
$str	FF6 ±
)
FF± ≤
]
FF≤ ≥
Ticket
FF¥ ∫
ticket
FFª ¡
)
FF¡ ¬
{GG 	
ifHH 
(HH 

ModelStateHH 
.HH 
IsValidHH "
)HH" #
{II 
ticketJJ 
.JJ 
IdJJ 
=JJ 
GuidJJ  
.JJ  !
NewGuidJJ! (
(JJ( )
)JJ) *
;JJ* +
_contextKK 
.KK 
AddKK 
(KK 
ticketKK #
)KK# $
;KK$ %
awaitLL 
_contextLL 
.LL 
SaveChangesAsyncLL /
(LL/ 0
)LL0 1
;LL1 2
returnMM 
RedirectToActionMM '
(MM' (
nameofMM( .
(MM. /
IndexMM/ 4
)MM4 5
)MM5 6
;MM6 7
}NN 
returnOO 
ViewOO 
(OO 
ticketOO 
)OO 
;OO  
}PP 	
publicSS 
asyncSS 
TaskSS 
<SS 
IActionResultSS '
>SS' (
EditSS) -
(SS- .
GuidSS. 2
?SS2 3
idSS4 6
)SS6 7
{TT 	
ifUU 
(UU 
idUU 
==UU 
nullUU 
)UU 
{VV 
returnWW 
NotFoundWW 
(WW  
)WW  !
;WW! "
}XX 
varZZ 
ticketZZ 
=ZZ 
awaitZZ 
_contextZZ '
.ZZ' (
TicketsZZ( /
.ZZ/ 0 
SingleOrDefaultAsyncZZ0 D
(ZZD E
mZZE F
=>ZZG I
mZZJ K
.ZZK L
IdZZL N
==ZZO Q
idZZR T
)ZZT U
;ZZU V
if[[ 
([[ 
ticket[[ 
==[[ 
null[[ 
)[[ 
{\\ 
return]] 
NotFound]] 
(]]  
)]]  !
;]]! "
}^^ 
return__ 
View__ 
(__ 
ticket__ 
)__ 
;__  
}`` 	
[ee 	
HttpPostee	 
]ee 
[ff 	$
ValidateAntiForgeryTokenff	 !
]ff! "
publicgg 
asyncgg 
Taskgg 
<gg 
IActionResultgg '
>gg' (
Editgg) -
(gg- .
Guidgg. 2
idgg3 5
,gg5 6
[gg7 8
Bindgg8 <
(gg< =
$str	gg= ∏
)
gg∏ π
]
ggπ ∫
Ticket
ggª ¡
ticket
gg¬ »
)
gg» …
{hh 	
ifii 
(ii 
idii 
!=ii 
ticketii 
.ii 
Idii 
)ii  
{jj 
returnkk 
NotFoundkk 
(kk  
)kk  !
;kk! "
}ll 
ifnn 
(nn 

ModelStatenn 
.nn 
IsValidnn "
)nn" #
{oo 
trypp 
{qq 
_contextrr 
.rr 
Updaterr #
(rr# $
ticketrr$ *
)rr* +
;rr+ ,
awaitss 
_contextss "
.ss" #
SaveChangesAsyncss# 3
(ss3 4
)ss4 5
;ss5 6
}tt 
catchuu 
(uu (
DbUpdateConcurrencyExceptionuu 3
)uu3 4
{vv 
ifww 
(ww 
!ww 
TicketExistsww %
(ww% &
ticketww& ,
.ww, -
Idww- /
)ww/ 0
)ww0 1
{xx 
returnyy 
NotFoundyy '
(yy' (
)yy( )
;yy) *
}zz 
else{{ 
{|| 
throw}} 
;}} 
}~~ 
} 
return
ÄÄ 
RedirectToAction
ÄÄ '
(
ÄÄ' (
nameof
ÄÄ( .
(
ÄÄ. /
Index
ÄÄ/ 4
)
ÄÄ4 5
)
ÄÄ5 6
;
ÄÄ6 7
}
ÅÅ 
return
ÇÇ 
View
ÇÇ 
(
ÇÇ 
ticket
ÇÇ 
)
ÇÇ 
;
ÇÇ  
}
ÉÉ 	
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
IActionResult
ÜÜ '
>
ÜÜ' (
Delete
ÜÜ) /
(
ÜÜ/ 0
Guid
ÜÜ0 4
?
ÜÜ4 5
id
ÜÜ6 8
)
ÜÜ8 9
{
áá 	
if
àà 
(
àà 
id
àà 
==
àà 
null
àà 
)
àà 
{
ââ 
return
ää 
NotFound
ää 
(
ää  
)
ää  !
;
ää! "
}
ãã 
var
çç 
ticket
çç 
=
çç 
await
çç 
_context
çç '
.
çç' (
Tickets
çç( /
.
éé "
SingleOrDefaultAsync
éé %
(
éé% &
m
éé& '
=>
éé( *
m
éé+ ,
.
éé, -
Id
éé- /
==
éé0 2
id
éé3 5
)
éé5 6
;
éé6 7
if
èè 
(
èè 
ticket
èè 
==
èè 
null
èè 
)
èè 
{
êê 
return
ëë 
NotFound
ëë 
(
ëë  
)
ëë  !
;
ëë! "
}
íí 
return
îî 
View
îî 
(
îî 
ticket
îî 
)
îî 
;
îî  
}
ïï 	
[
òò 	
HttpPost
òò	 
,
òò 

ActionName
òò 
(
òò 
$str
òò &
)
òò& '
]
òò' (
[
ôô 	&
ValidateAntiForgeryToken
ôô	 !
]
ôô! "
public
öö 
async
öö 
Task
öö 
<
öö 
IActionResult
öö '
>
öö' (
DeleteConfirmed
öö) 8
(
öö8 9
Guid
öö9 =
id
öö> @
)
öö@ A
{
õõ 	
var
úú 
ticket
úú 
=
úú 
await
úú 
_context
úú '
.
úú' (
Tickets
úú( /
.
úú/ 0"
SingleOrDefaultAsync
úú0 D
(
úúD E
m
úúE F
=>
úúG I
m
úúJ K
.
úúK L
Id
úúL N
==
úúO Q
id
úúR T
)
úúT U
;
úúU V
_context
ùù 
.
ùù 
Tickets
ùù 
.
ùù 
Remove
ùù #
(
ùù# $
ticket
ùù$ *
)
ùù* +
;
ùù+ ,
await
ûû 
_context
ûû 
.
ûû 
SaveChangesAsync
ûû +
(
ûû+ ,
)
ûû, -
;
ûû- .
return
üü 
RedirectToAction
üü #
(
üü# $
nameof
üü$ *
(
üü* +
Index
üü+ 0
)
üü0 1
)
üü1 2
;
üü2 3
}
†† 	
private
¢¢ 
bool
¢¢ 
TicketExists
¢¢ !
(
¢¢! "
Guid
¢¢" &
id
¢¢' )
)
¢¢) *
{
££ 	
return
§§ 
_context
§§ 
.
§§ 
Tickets
§§ #
.
§§# $
Any
§§$ '
(
§§' (
e
§§( )
=>
§§* ,
e
§§- .
.
§§. /
Id
§§/ 1
==
§§2 4
id
§§5 7
)
§§7 8
;
§§8 9
}
•• 	
}
¶¶ 
}ßß €N
SC:\Users\jolde\Desktop\TrainManagement\Presentation\Controllers\TrainsController.cs
	namespace 	
Presentation
 
. 
Controllers "
{ 
public 

class 
TrainsController !
:" #

Controller$ .
{ 
private 
readonly 
DatabaseContext (
_context) 1
;1 2
private 
readonly 
IRepository $
<$ %
Train% *
>* +
_repository, 7
;7 8
public 
TrainsController 
(  
DatabaseContext  /
context0 7
,7 8
IRepository9 D
<D E
TrainE J
>J K

repositoryL V
)V W
{ 	
_context 
= 
context 
; 
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Index) .
(. /
)/ 0
{ 	
return 
View 
( 
_repository #
.# $
GetAll$ *
(* +
)+ ,
), -
;- .
} 	
public 
async 
Task 
< 
IActionResult '
>' (
Details) 0
(0 1
string1 7
officialNumber8 F
)F G
{   	
if!! 
(!! 
officialNumber!! 
==!! !
null!!" &
)!!& '
{"" 
return## 
NotFound## 
(##  
)##  !
;##! "
}$$ 
var&& 
train&& 
=&& 
await&& 
_context&& &
.&&& '
Trains&&' -
.''  
SingleOrDefaultAsync'' %
(''% &
m''& '
=>''( *
m''+ ,
.'', -
OfficialNumber''- ;
==''< >
officialNumber''? M
)''M N
;''N O
if(( 
((( 
train(( 
==(( 
null(( 
)(( 
{)) 
return** 
NotFound** 
(**  
)**  !
;**! "
}++ 
return,, 
View,, 
(,, 
train,, 
),, 
;,, 
}-- 	
public00 
IActionResult00 
Create00 #
(00# $
)00$ %
{11 	
return22 
View22 
(22 
)22 
;22 
}33 	
[88 	
HttpPost88	 
]88 
[99 	$
ValidateAntiForgeryToken99	 !
]99! "
public:: 
async:: 
Task:: 
<:: 
IActionResult:: '
>::' (
Create::) /
(::/ 0
[::0 1
Bind::1 5
(::5 6
$str	::6 à
)
::à â
]
::â ä
Train
::ã ê
train
::ë ñ
)
::ñ ó
{;; 	
if<< 
(<< 

ModelState<< 
.<< 
IsValid<< "
)<<" #
{== 
train>> 
.>> 
Id>> 
=>> 
Guid>> 
.>>  
NewGuid>>  '
(>>' (
)>>( )
;>>) *
_context?? 
.?? 
Add?? 
(?? 
train?? "
)??" #
;??# $
await@@ 
_context@@ 
.@@ 
SaveChangesAsync@@ /
(@@/ 0
)@@0 1
;@@1 2
returnAA 
RedirectToActionAA '
(AA' (
nameofAA( .
(AA. /
IndexAA/ 4
)AA4 5
)AA5 6
;AA6 7
}BB 
returnCC 
ViewCC 
(CC 
trainCC 
)CC 
;CC 
}DD 	
publicGG 
asyncGG 
TaskGG 
<GG 
IActionResultGG '
>GG' (
EditGG) -
(GG- .
GuidGG. 2
?GG2 3
idGG4 6
)GG6 7
{HH 	
ifII 
(II 
idII 
==II 
nullII 
)II 
{JJ 
returnKK 
NotFoundKK 
(KK  
)KK  !
;KK! "
}LL 
varNN 
trainNN 
=NN 
awaitNN 
_contextNN &
.NN& '
TrainsNN' -
.NN- . 
SingleOrDefaultAsyncNN. B
(NNB C
mNNC D
=>NNE G
mNNH I
.NNI J
IdNNJ L
==NNM O
idNNP R
)NNR S
;NNS T
ifOO 
(OO 
trainOO 
==OO 
nullOO 
)OO 
{PP 
returnQQ 
NotFoundQQ 
(QQ  
)QQ  !
;QQ! "
}RR 
returnSS 
ViewSS 
(SS 
trainSS 
)SS 
;SS 
}TT 	
[YY 	
HttpPostYY	 
]YY 
[ZZ 	$
ValidateAntiForgeryTokenZZ	 !
]ZZ! "
public[[ 
async[[ 
Task[[ 
<[[ 
IActionResult[[ '
>[[' (
Edit[[) -
([[- .
Guid[[. 2
id[[3 5
,[[5 6
[[[7 8
Bind[[8 <
([[< =
$str	[[= è
)
[[è ê
]
[[ê ë
Train
[[í ó
train
[[ò ù
)
[[ù û
{\\ 	
if]] 
(]] 
id]] 
!=]] 
train]] 
.]] 
Id]] 
)]] 
{^^ 
return__ 
NotFound__ 
(__  
)__  !
;__! "
}`` 
ifbb 
(bb 

ModelStatebb 
.bb 
IsValidbb "
)bb" #
{cc 
trydd 
{ee 
_contextff 
.ff 
Updateff #
(ff# $
trainff$ )
)ff) *
;ff* +
awaitgg 
_contextgg "
.gg" #
SaveChangesAsyncgg# 3
(gg3 4
)gg4 5
;gg5 6
}hh 
catchii 
(ii (
DbUpdateConcurrencyExceptionii 3
)ii3 4
{jj 
ifkk 
(kk 
!kk 
TrainExistskk $
(kk$ %
trainkk% *
.kk* +
Idkk+ -
)kk- .
)kk. /
{ll 
returnmm 
NotFoundmm '
(mm' (
)mm( )
;mm) *
}nn 
elseoo 
{pp 
throwqq 
;qq 
}rr 
}ss 
returntt 
RedirectToActiontt '
(tt' (
nameoftt( .
(tt. /
Indextt/ 4
)tt4 5
)tt5 6
;tt6 7
}uu 
returnvv 
Viewvv 
(vv 
trainvv 
)vv 
;vv 
}ww 	
publiczz 
asynczz 
Taskzz 
<zz 
IActionResultzz '
>zz' (
Deletezz) /
(zz/ 0
Guidzz0 4
?zz4 5
idzz6 8
)zz8 9
{{{ 	
if|| 
(|| 
id|| 
==|| 
null|| 
)|| 
{}} 
return~~ 
NotFound~~ 
(~~  
)~~  !
;~~! "
} 
var
ÅÅ 
train
ÅÅ 
=
ÅÅ 
await
ÅÅ 
_context
ÅÅ &
.
ÅÅ& '
Trains
ÅÅ' -
.
ÇÇ "
SingleOrDefaultAsync
ÇÇ %
(
ÇÇ% &
m
ÇÇ& '
=>
ÇÇ( *
m
ÇÇ+ ,
.
ÇÇ, -
Id
ÇÇ- /
==
ÇÇ0 2
id
ÇÇ3 5
)
ÇÇ5 6
;
ÇÇ6 7
if
ÉÉ 
(
ÉÉ 
train
ÉÉ 
==
ÉÉ 
null
ÉÉ 
)
ÉÉ 
{
ÑÑ 
return
ÖÖ 
NotFound
ÖÖ 
(
ÖÖ  
)
ÖÖ  !
;
ÖÖ! "
}
ÜÜ 
return
àà 
View
àà 
(
àà 
train
àà 
)
àà 
;
àà 
}
ââ 	
[
åå 	
HttpPost
åå	 
,
åå 

ActionName
åå 
(
åå 
$str
åå &
)
åå& '
]
åå' (
[
çç 	&
ValidateAntiForgeryToken
çç	 !
]
çç! "
public
éé 
async
éé 
Task
éé 
<
éé 
IActionResult
éé '
>
éé' (
DeleteConfirmed
éé) 8
(
éé8 9
Guid
éé9 =
id
éé> @
)
éé@ A
{
èè 	
var
êê 
train
êê 
=
êê 
await
êê 
_context
êê &
.
êê& '
Trains
êê' -
.
êê- ."
SingleOrDefaultAsync
êê. B
(
êêB C
m
êêC D
=>
êêE G
m
êêH I
.
êêI J
Id
êêJ L
==
êêM O
id
êêP R
)
êêR S
;
êêS T
_context
ëë 
.
ëë 
Trains
ëë 
.
ëë 
Remove
ëë "
(
ëë" #
train
ëë# (
)
ëë( )
;
ëë) *
await
íí 
_context
íí 
.
íí 
SaveChangesAsync
íí +
(
íí+ ,
)
íí, -
;
íí- .
return
ìì 
RedirectToAction
ìì #
(
ìì# $
nameof
ìì$ *
(
ìì* +
Index
ìì+ 0
)
ìì0 1
)
ìì1 2
;
ìì2 3
}
îî 	
private
ññ 
bool
ññ 
TrainExists
ññ  
(
ññ  !
Guid
ññ! %
id
ññ& (
)
ññ( )
{
óó 	
return
òò 
_context
òò 
.
òò 
Trains
òò "
.
òò" #
Any
òò# &
(
òò& '
e
òò' (
=>
òò) +
e
òò, -
.
òò- .
Id
òò. 0
==
òò1 3
id
òò4 6
)
òò6 7
;
òò7 8
}
ôô 	
}
öö 
}õõ å
PC:\Users\jolde\Desktop\TrainManagement\Presentation\Data\ApplicationDbContext.cs
	namespace		 	
Presentation		
 
.		 
Data		 
{

 
public 

class  
ApplicationDbContext %
:& '
IdentityDbContext( 9
<9 :
ApplicationUser: I
>I J
{ 
public  
ApplicationDbContext #
(# $
DbContextOptions$ 4
<4 5 
ApplicationDbContext5 I
>I J
optionsK R
)R S
: 
base 
( 
options 
) 
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
builder= D
)D E
{ 	
base 
. 
OnModelCreating  
(  !
builder! (
)( )
;) *
} 	
} 
} –Ø
jC:\Users\jolde\Desktop\TrainManagement\Presentation\Data\Migrations\00000000000000_CreateIdentitySchema.cs
	namespace 	
Presentation
 
. 
Data 
. 

Migrations &
{		 
public

 

partial

 
class

  
CreateIdentitySchema

 -
:

. /
	Migration

0 9
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
nullable< D
:D E
trueF J
)J K
,K L
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
	maxLength0 9
:9 :
$num; >
,> ?
nullable@ H
:H I
trueJ N
)N O
,O P
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
	maxLength: C
:C D
$numE H
,H I
nullableJ R
:R S
trueT X
)X Y
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str (
,( )
columns 
: 
table 
=> !
new" %
{ 
UserId   
=   
table   "
.  " #
Column  # )
<  ) *
string  * 0
>  0 1
(  1 2
nullable  2 :
:  : ;
false  < A
)  A B
,  B C
LoginProvider!! !
=!!" #
table!!$ )
.!!) *
Column!!* 0
<!!0 1
string!!1 7
>!!7 8
(!!8 9
nullable!!9 A
:!!A B
false!!C H
)!!H I
,!!I J
Name"" 
="" 
table""  
.""  !
Column""! '
<""' (
string""( .
>"". /
(""/ 0
nullable""0 8
:""8 9
false"": ?
)""? @
,""@ A
Value## 
=## 
table## !
.##! "
Column##" (
<##( )
string##) /
>##/ 0
(##0 1
nullable##1 9
:##9 :
true##; ?
)##? @
}$$ 
,$$ 
constraints%% 
:%% 
table%% "
=>%%# %
{&& 
table'' 
.'' 

PrimaryKey'' $
(''$ %
$str''% :
,'': ;
x''< =
=>''> @
new''A D
{''E F
x''G H
.''H I
UserId''I O
,''O P
x''Q R
.''R S
LoginProvider''S `
,''` a
x''b c
.''c d
Name''d h
}''i j
)''j k
;''k l
}(( 
)(( 
;(( 
migrationBuilder** 
.** 
CreateTable** (
(**( )
name++ 
:++ 
$str++ #
,++# $
columns,, 
:,, 
table,, 
=>,, !
new,," %
{-- 
Id.. 
=.. 
table.. 
... 
Column.. %
<..% &
string..& ,
>.., -
(..- .
nullable... 6
:..6 7
false..8 =
)..= >
,..> ?
AccessFailedCount// %
=//& '
table//( -
.//- .
Column//. 4
<//4 5
int//5 8
>//8 9
(//9 :
nullable//: B
://B C
false//D I
)//I J
,//J K
ConcurrencyStamp00 $
=00% &
table00' ,
.00, -
Column00- 3
<003 4
string004 :
>00: ;
(00; <
nullable00< D
:00D E
true00F J
)00J K
,00K L
Email11 
=11 
table11 !
.11! "
Column11" (
<11( )
string11) /
>11/ 0
(110 1
	maxLength111 :
:11: ;
$num11< ?
,11? @
nullable11A I
:11I J
true11K O
)11O P
,11P Q
EmailConfirmed22 "
=22# $
table22% *
.22* +
Column22+ 1
<221 2
bool222 6
>226 7
(227 8
nullable228 @
:22@ A
false22B G
)22G H
,22H I
LockoutEnabled33 "
=33# $
table33% *
.33* +
Column33+ 1
<331 2
bool332 6
>336 7
(337 8
nullable338 @
:33@ A
false33B G
)33G H
,33H I

LockoutEnd44 
=44  
table44! &
.44& '
Column44' -
<44- .
DateTimeOffset44. <
>44< =
(44= >
nullable44> F
:44F G
true44H L
)44L M
,44M N
NormalizedEmail55 #
=55$ %
table55& +
.55+ ,
Column55, 2
<552 3
string553 9
>559 :
(55: ;
	maxLength55; D
:55D E
$num55F I
,55I J
nullable55K S
:55S T
true55U Y
)55Y Z
,55Z [
NormalizedUserName66 &
=66' (
table66) .
.66. /
Column66/ 5
<665 6
string666 <
>66< =
(66= >
	maxLength66> G
:66G H
$num66I L
,66L M
nullable66N V
:66V W
true66X \
)66\ ]
,66] ^
PasswordHash77  
=77! "
table77# (
.77( )
Column77) /
<77/ 0
string770 6
>776 7
(777 8
nullable778 @
:77@ A
true77B F
)77F G
,77G H
PhoneNumber88 
=88  !
table88" '
.88' (
Column88( .
<88. /
string88/ 5
>885 6
(886 7
nullable887 ?
:88? @
true88A E
)88E F
,88F G 
PhoneNumberConfirmed99 (
=99) *
table99+ 0
.990 1
Column991 7
<997 8
bool998 <
>99< =
(99= >
nullable99> F
:99F G
false99H M
)99M N
,99N O
SecurityStamp:: !
=::" #
table::$ )
.::) *
Column::* 0
<::0 1
string::1 7
>::7 8
(::8 9
nullable::9 A
:::A B
true::C G
)::G H
,::H I
TwoFactorEnabled;; $
=;;% &
table;;' ,
.;;, -
Column;;- 3
<;;3 4
bool;;4 8
>;;8 9
(;;9 :
nullable;;: B
:;;B C
false;;D I
);;I J
,;;J K
UserName<< 
=<< 
table<< $
.<<$ %
Column<<% +
<<<+ ,
string<<, 2
><<2 3
(<<3 4
	maxLength<<4 =
:<<= >
$num<<? B
,<<B C
nullable<<D L
:<<L M
true<<N R
)<<R S
}== 
,== 
constraints>> 
:>> 
table>> "
=>>># %
{?? 
table@@ 
.@@ 

PrimaryKey@@ $
(@@$ %
$str@@% 5
,@@5 6
x@@7 8
=>@@9 ;
x@@< =
.@@= >
Id@@> @
)@@@ A
;@@A B
}AA 
)AA 
;AA 
migrationBuilderCC 
.CC 
CreateTableCC (
(CC( )
nameDD 
:DD 
$strDD (
,DD( )
columnsEE 
:EE 
tableEE 
=>EE !
newEE" %
{FF 
IdGG 
=GG 
tableGG 
.GG 
ColumnGG %
<GG% &
intGG& )
>GG) *
(GG* +
nullableGG+ 3
:GG3 4
falseGG5 :
)GG: ;
.HH 

AnnotationHH #
(HH# $
$strHH$ G
,HHG H,
 SqlServerValueGenerationStrategyHHI i
.HHi j
IdentityColumnHHj x
)HHx y
,HHy z
	ClaimTypeII 
=II 
tableII  %
.II% &
ColumnII& ,
<II, -
stringII- 3
>II3 4
(II4 5
nullableII5 =
:II= >
trueII? C
)IIC D
,IID E

ClaimValueJJ 
=JJ  
tableJJ! &
.JJ& '
ColumnJJ' -
<JJ- .
stringJJ. 4
>JJ4 5
(JJ5 6
nullableJJ6 >
:JJ> ?
trueJJ@ D
)JJD E
,JJE F
RoleIdKK 
=KK 
tableKK "
.KK" #
ColumnKK# )
<KK) *
stringKK* 0
>KK0 1
(KK1 2
nullableKK2 :
:KK: ;
falseKK< A
)KKA B
}LL 
,LL 
constraintsMM 
:MM 
tableMM "
=>MM# %
{NN 
tableOO 
.OO 

PrimaryKeyOO $
(OO$ %
$strOO% :
,OO: ;
xOO< =
=>OO> @
xOOA B
.OOB C
IdOOC E
)OOE F
;OOF G
tablePP 
.PP 

ForeignKeyPP $
(PP$ %
nameQQ 
:QQ 
$strQQ F
,QQF G
columnRR 
:RR 
xRR  !
=>RR" $
xRR% &
.RR& '
RoleIdRR' -
,RR- .
principalTableSS &
:SS& '
$strSS( 5
,SS5 6
principalColumnTT '
:TT' (
$strTT) -
,TT- .
onDeleteUU  
:UU  !
ReferentialActionUU" 3
.UU3 4
CascadeUU4 ;
)UU; <
;UU< =
}VV 
)VV 
;VV 
migrationBuilderXX 
.XX 
CreateTableXX (
(XX( )
nameYY 
:YY 
$strYY (
,YY( )
columnsZZ 
:ZZ 
tableZZ 
=>ZZ !
newZZ" %
{[[ 
Id\\ 
=\\ 
table\\ 
.\\ 
Column\\ %
<\\% &
int\\& )
>\\) *
(\\* +
nullable\\+ 3
:\\3 4
false\\5 :
)\\: ;
.]] 

Annotation]] #
(]]# $
$str]]$ G
,]]G H,
 SqlServerValueGenerationStrategy]]I i
.]]i j
IdentityColumn]]j x
)]]x y
,]]y z
	ClaimType^^ 
=^^ 
table^^  %
.^^% &
Column^^& ,
<^^, -
string^^- 3
>^^3 4
(^^4 5
nullable^^5 =
:^^= >
true^^? C
)^^C D
,^^D E

ClaimValue__ 
=__  
table__! &
.__& '
Column__' -
<__- .
string__. 4
>__4 5
(__5 6
nullable__6 >
:__> ?
true__@ D
)__D E
,__E F
UserId`` 
=`` 
table`` "
.``" #
Column``# )
<``) *
string``* 0
>``0 1
(``1 2
nullable``2 :
:``: ;
false``< A
)``A B
}aa 
,aa 
constraintsbb 
:bb 
tablebb "
=>bb# %
{cc 
tabledd 
.dd 

PrimaryKeydd $
(dd$ %
$strdd% :
,dd: ;
xdd< =
=>dd> @
xddA B
.ddB C
IdddC E
)ddE F
;ddF G
tableee 
.ee 

ForeignKeyee $
(ee$ %
nameff 
:ff 
$strff F
,ffF G
columngg 
:gg 
xgg  !
=>gg" $
xgg% &
.gg& '
UserIdgg' -
,gg- .
principalTablehh &
:hh& '
$strhh( 5
,hh5 6
principalColumnii '
:ii' (
$strii) -
,ii- .
onDeletejj  
:jj  !
ReferentialActionjj" 3
.jj3 4
Cascadejj4 ;
)jj; <
;jj< =
}kk 
)kk 
;kk 
migrationBuildermm 
.mm 
CreateTablemm (
(mm( )
namenn 
:nn 
$strnn (
,nn( )
columnsoo 
:oo 
tableoo 
=>oo !
newoo" %
{pp 
LoginProviderqq !
=qq" #
tableqq$ )
.qq) *
Columnqq* 0
<qq0 1
stringqq1 7
>qq7 8
(qq8 9
nullableqq9 A
:qqA B
falseqqC H
)qqH I
,qqI J
ProviderKeyrr 
=rr  !
tablerr" '
.rr' (
Columnrr( .
<rr. /
stringrr/ 5
>rr5 6
(rr6 7
nullablerr7 ?
:rr? @
falserrA F
)rrF G
,rrG H
ProviderDisplayNamess '
=ss( )
tabless* /
.ss/ 0
Columnss0 6
<ss6 7
stringss7 =
>ss= >
(ss> ?
nullabless? G
:ssG H
truessI M
)ssM N
,ssN O
UserIdtt 
=tt 
tablett "
.tt" #
Columntt# )
<tt) *
stringtt* 0
>tt0 1
(tt1 2
nullablett2 :
:tt: ;
falsett< A
)ttA B
}uu 
,uu 
constraintsvv 
:vv 
tablevv "
=>vv# %
{ww 
tablexx 
.xx 

PrimaryKeyxx $
(xx$ %
$strxx% :
,xx: ;
xxx< =
=>xx> @
newxxA D
{xxE F
xxxG H
.xxH I
LoginProviderxxI V
,xxV W
xxxX Y
.xxY Z
ProviderKeyxxZ e
}xxf g
)xxg h
;xxh i
tableyy 
.yy 

ForeignKeyyy $
(yy$ %
namezz 
:zz 
$strzz F
,zzF G
column{{ 
:{{ 
x{{  !
=>{{" $
x{{% &
.{{& '
UserId{{' -
,{{- .
principalTable|| &
:||& '
$str||( 5
,||5 6
principalColumn}} '
:}}' (
$str}}) -
,}}- .
onDelete~~  
:~~  !
ReferentialAction~~" 3
.~~3 4
Cascade~~4 ;
)~~; <
;~~< =
} 
) 
; 
migrationBuilder
ÅÅ 
.
ÅÅ 
CreateTable
ÅÅ (
(
ÅÅ( )
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
columns
ÉÉ 
:
ÉÉ 
table
ÉÉ 
=>
ÉÉ !
new
ÉÉ" %
{
ÑÑ 
UserId
ÖÖ 
=
ÖÖ 
table
ÖÖ "
.
ÖÖ" #
Column
ÖÖ# )
<
ÖÖ) *
string
ÖÖ* 0
>
ÖÖ0 1
(
ÖÖ1 2
nullable
ÖÖ2 :
:
ÖÖ: ;
false
ÖÖ< A
)
ÖÖA B
,
ÖÖB C
RoleId
ÜÜ 
=
ÜÜ 
table
ÜÜ "
.
ÜÜ" #
Column
ÜÜ# )
<
ÜÜ) *
string
ÜÜ* 0
>
ÜÜ0 1
(
ÜÜ1 2
nullable
ÜÜ2 :
:
ÜÜ: ;
false
ÜÜ< A
)
ÜÜA B
}
áá 
,
áá 
constraints
àà 
:
àà 
table
àà "
=>
àà# %
{
ââ 
table
ää 
.
ää 

PrimaryKey
ää $
(
ää$ %
$str
ää% 9
,
ää9 :
x
ää; <
=>
ää= ?
new
ää@ C
{
ääD E
x
ääF G
.
ääG H
UserId
ääH N
,
ääN O
x
ääP Q
.
ääQ R
RoleId
ääR X
}
ääY Z
)
ääZ [
;
ää[ \
table
ãã 
.
ãã 

ForeignKey
ãã $
(
ãã$ %
name
åå 
:
åå 
$str
åå E
,
ååE F
column
çç 
:
çç 
x
çç  !
=>
çç" $
x
çç% &
.
çç& '
RoleId
çç' -
,
çç- .
principalTable
éé &
:
éé& '
$str
éé( 5
,
éé5 6
principalColumn
èè '
:
èè' (
$str
èè) -
,
èè- .
onDelete
êê  
:
êê  !
ReferentialAction
êê" 3
.
êê3 4
Cascade
êê4 ;
)
êê; <
;
êê< =
table
ëë 
.
ëë 

ForeignKey
ëë $
(
ëë$ %
name
íí 
:
íí 
$str
íí E
,
ííE F
column
ìì 
:
ìì 
x
ìì  !
=>
ìì" $
x
ìì% &
.
ìì& '
UserId
ìì' -
,
ìì- .
principalTable
îî &
:
îî& '
$str
îî( 5
,
îî5 6
principalColumn
ïï '
:
ïï' (
$str
ïï) -
,
ïï- .
onDelete
ññ  
:
ññ  !
ReferentialAction
ññ" 3
.
ññ3 4
Cascade
ññ4 ;
)
ññ; <
;
ññ< =
}
óó 
)
óó 
;
óó 
migrationBuilder
ôô 
.
ôô 
CreateIndex
ôô (
(
ôô( )
name
öö 
:
öö 
$str
öö %
,
öö% &
table
õõ 
:
õõ 
$str
õõ $
,
õõ$ %
column
úú 
:
úú 
$str
úú (
)
úú( )
;
úú) *
migrationBuilder
ûû 
.
ûû 
CreateIndex
ûû (
(
ûû( )
name
üü 
:
üü 
$str
üü 2
,
üü2 3
table
†† 
:
†† 
$str
†† )
,
††) *
column
°° 
:
°° 
$str
°°  
)
°°  !
;
°°! "
migrationBuilder
££ 
.
££ 
CreateIndex
££ (
(
££( )
name
§§ 
:
§§ 
$str
§§ 2
,
§§2 3
table
•• 
:
•• 
$str
•• )
,
••) *
column
¶¶ 
:
¶¶ 
$str
¶¶  
)
¶¶  !
;
¶¶! "
migrationBuilder
®® 
.
®® 
CreateIndex
®® (
(
®®( )
name
©© 
:
©© 
$str
©© 2
,
©©2 3
table
™™ 
:
™™ 
$str
™™ )
,
™™) *
column
´´ 
:
´´ 
$str
´´  
)
´´  !
;
´´! "
migrationBuilder
≠≠ 
.
≠≠ 
CreateIndex
≠≠ (
(
≠≠( )
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ 1
,
ÆÆ1 2
table
ØØ 
:
ØØ 
$str
ØØ (
,
ØØ( )
column
∞∞ 
:
∞∞ 
$str
∞∞  
)
∞∞  !
;
∞∞! "
migrationBuilder
≤≤ 
.
≤≤ 
CreateIndex
≤≤ (
(
≤≤( )
name
≥≥ 
:
≥≥ 
$str
≥≥ 1
,
≥≥1 2
table
¥¥ 
:
¥¥ 
$str
¥¥ (
,
¥¥( )
column
µµ 
:
µµ 
$str
µµ  
)
µµ  !
;
µµ! "
migrationBuilder
∑∑ 
.
∑∑ 
CreateIndex
∑∑ (
(
∑∑( )
name
∏∏ 
:
∏∏ 
$str
∏∏ "
,
∏∏" #
table
ππ 
:
ππ 
$str
ππ $
,
ππ$ %
column
∫∫ 
:
∫∫ 
$str
∫∫ )
)
∫∫) *
;
∫∫* +
migrationBuilder
ºº 
.
ºº 
CreateIndex
ºº (
(
ºº( )
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ %
,
ΩΩ% &
table
ææ 
:
ææ 
$str
ææ $
,
ææ$ %
column
øø 
:
øø 
$str
øø ,
,
øø, -
unique
¿¿ 
:
¿¿ 
true
¿¿ 
)
¿¿ 
;
¿¿ 
}
¡¡ 	
	protected
√√ 
override
√√ 
void
√√ 
Down
√√  $
(
√√$ %
MigrationBuilder
√√% 5
migrationBuilder
√√6 F
)
√√F G
{
ƒƒ 	
migrationBuilder
≈≈ 
.
≈≈ 
	DropTable
≈≈ &
(
≈≈& '
name
∆∆ 
:
∆∆ 
$str
∆∆ (
)
∆∆( )
;
∆∆) *
migrationBuilder
»» 
.
»» 
	DropTable
»» &
(
»»& '
name
…… 
:
…… 
$str
…… (
)
……( )
;
……) *
migrationBuilder
ÀÀ 
.
ÀÀ 
	DropTable
ÀÀ &
(
ÀÀ& '
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ (
)
ÃÃ( )
;
ÃÃ) *
migrationBuilder
ŒŒ 
.
ŒŒ 
	DropTable
ŒŒ &
(
ŒŒ& '
name
œœ 
:
œœ 
$str
œœ '
)
œœ' (
;
œœ( )
migrationBuilder
—— 
.
—— 
	DropTable
—— &
(
——& '
name
““ 
:
““ 
$str
““ (
)
““( )
;
““) *
migrationBuilder
‘‘ 
.
‘‘ 
	DropTable
‘‘ &
(
‘‘& '
name
’’ 
:
’’ 
$str
’’ #
)
’’# $
;
’’$ %
migrationBuilder
◊◊ 
.
◊◊ 
	DropTable
◊◊ &
(
◊◊& '
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ #
)
ÿÿ# $
;
ÿÿ$ %
}
ŸŸ 	
}
⁄⁄ 
}€€ ªÅ
hC:\Users\jolde\Desktop\TrainManagement\Presentation\Data\Migrations\ApplicationDbContextModelSnapshot.cs
	namespace

 	
Presentation


 
.

 
Data

 
.

 

Migrations

 &
{ 
[ 
	DbContext 
( 
typeof 
(  
ApplicationDbContext *
)* +
)+ ,
], -
partial 
class -
!ApplicationDbContextModelSnapshot 3
:4 5
ModelSnapshot6 C
{ 
	protected 
override 
void 

BuildModel  *
(* +
ModelBuilder+ 7
modelBuilder8 D
)D E
{ 	
modelBuilder 
. 
HasAnnotation 
( 
$str /
,/ 0
$str1 <
)< =
. 
HasAnnotation 
( 
$str B
,B C,
 SqlServerValueGenerationStrategyD d
.d e
IdentityColumne s
)s t
;t u
modelBuilder 
. 
Entity 
(  
$str  `
,` a
bb c
=>d f
{ 
b 
. 
Property 
< 
string %
>% &
(& '
$str' +
)+ ,
;, -
b 
. 
Property 
< 
string %
>% &
(& '
$str' 9
)9 :
. 
IsConcurrencyToken +
(+ ,
), -
;- .
b 
. 
Property 
< 
string %
>% &
(& '
$str' -
)- .
. 
HasAnnotation &
(& '
$str' 2
,2 3
$num4 7
)7 8
;8 9
b 
. 
Property 
< 
string %
>% &
(& '
$str' 7
)7 8
.   
HasAnnotation   &
(  & '
$str  ' 2
,  2 3
$num  4 7
)  7 8
;  8 9
b"" 
."" 
HasKey"" 
("" 
$str"" !
)""! "
;""" #
b$$ 
.$$ 
HasIndex$$ 
($$ 
$str$$ /
)$$/ 0
.%% 
HasName%%  
(%%  !
$str%%! 0
)%%0 1
;%%1 2
b'' 
.'' 
ToTable'' 
('' 
$str'' +
)''+ ,
;'', -
}(( 
)(( 
;(( 
modelBuilder** 
.** 
Entity** 
(**  
$str**  m
,**m n
b**o p
=>**q s
{++ 
b,, 
.,, 
Property,, 
<,, 
int,, "
>,," #
(,,# $
$str,,$ (
),,( )
.-- 
ValueGeneratedOnAdd-- ,
(--, -
)--- .
;--. /
b// 
.// 
Property// 
<// 
string// %
>//% &
(//& '
$str//' 2
)//2 3
;//3 4
b11 
.11 
Property11 
<11 
string11 %
>11% &
(11& '
$str11' 3
)113 4
;114 5
b33 
.33 
Property33 
<33 
string33 %
>33% &
(33& '
$str33' /
)33/ 0
.44 

IsRequired44 #
(44# $
)44$ %
;44% &
b66 
.66 
HasKey66 
(66 
$str66 !
)66! "
;66" #
b88 
.88 
HasIndex88 
(88 
$str88 '
)88' (
;88( )
b:: 
.:: 
ToTable:: 
(:: 
$str:: 0
)::0 1
;::1 2
};; 
);; 
;;; 
modelBuilder== 
.== 
Entity== 
(==  
$str==  m
,==m n
b==o p
=>==q s
{>> 
b?? 
.?? 
Property?? 
<?? 
int?? "
>??" #
(??# $
$str??$ (
)??( )
.@@ 
ValueGeneratedOnAdd@@ ,
(@@, -
)@@- .
;@@. /
bBB 
.BB 
PropertyBB 
<BB 
stringBB %
>BB% &
(BB& '
$strBB' 2
)BB2 3
;BB3 4
bDD 
.DD 
PropertyDD 
<DD 
stringDD %
>DD% &
(DD& '
$strDD' 3
)DD3 4
;DD4 5
bFF 
.FF 
PropertyFF 
<FF 
stringFF %
>FF% &
(FF& '
$strFF' /
)FF/ 0
.GG 

IsRequiredGG #
(GG# $
)GG$ %
;GG% &
bII 
.II 
HasKeyII 
(II 
$strII !
)II! "
;II" #
bKK 
.KK 
HasIndexKK 
(KK 
$strKK '
)KK' (
;KK( )
bMM 
.MM 
ToTableMM 
(MM 
$strMM 0
)MM0 1
;MM1 2
}NN 
)NN 
;NN 
modelBuilderPP 
.PP 
EntityPP 
(PP  
$strPP  m
,PPm n
bPPo p
=>PPq s
{QQ 
bRR 
.RR 
PropertyRR 
<RR 
stringRR %
>RR% &
(RR& '
$strRR' 6
)RR6 7
;RR7 8
bTT 
.TT 
PropertyTT 
<TT 
stringTT %
>TT% &
(TT& '
$strTT' 4
)TT4 5
;TT5 6
bVV 
.VV 
PropertyVV 
<VV 
stringVV %
>VV% &
(VV& '
$strVV' <
)VV< =
;VV= >
bXX 
.XX 
PropertyXX 
<XX 
stringXX %
>XX% &
(XX& '
$strXX' /
)XX/ 0
.YY 

IsRequiredYY #
(YY# $
)YY$ %
;YY% &
b[[ 
.[[ 
HasKey[[ 
([[ 
$str[[ ,
,[[, -
$str[[. ;
)[[; <
;[[< =
b]] 
.]] 
HasIndex]] 
(]] 
$str]] '
)]]' (
;]]( )
b__ 
.__ 
ToTable__ 
(__ 
$str__ 0
)__0 1
;__1 2
}`` 
)`` 
;`` 
modelBuilderbb 
.bb 
Entitybb 
(bb  
$strbb  l
,bbl m
bbbn o
=>bbp r
{cc 
bdd 
.dd 
Propertydd 
<dd 
stringdd %
>dd% &
(dd& '
$strdd' /
)dd/ 0
;dd0 1
bff 
.ff 
Propertyff 
<ff 
stringff %
>ff% &
(ff& '
$strff' /
)ff/ 0
;ff0 1
bhh 
.hh 
HasKeyhh 
(hh 
$strhh %
,hh% &
$strhh' /
)hh/ 0
;hh0 1
bjj 
.jj 
HasIndexjj 
(jj 
$strjj '
)jj' (
;jj( )
bll 
.ll 
HasIndexll 
(ll 
$strll '
)ll' (
;ll( )
bnn 
.nn 
ToTablenn 
(nn 
$strnn /
)nn/ 0
;nn0 1
}oo 
)oo 
;oo 
modelBuilderqq 
.qq 
Entityqq 
(qq  
$strqq  m
,qqm n
bqqo p
=>qqq s
{rr 
bss 
.ss 
Propertyss 
<ss 
stringss %
>ss% &
(ss& '
$strss' /
)ss/ 0
;ss0 1
buu 
.uu 
Propertyuu 
<uu 
stringuu %
>uu% &
(uu& '
$struu' 6
)uu6 7
;uu7 8
bww 
.ww 
Propertyww 
<ww 
stringww %
>ww% &
(ww& '
$strww' -
)ww- .
;ww. /
byy 
.yy 
Propertyyy 
<yy 
stringyy %
>yy% &
(yy& '
$stryy' .
)yy. /
;yy/ 0
b{{ 
.{{ 
HasKey{{ 
({{ 
$str{{ %
,{{% &
$str{{' 6
,{{6 7
$str{{8 >
){{> ?
;{{? @
b}} 
.}} 
ToTable}} 
(}} 
$str}} 0
)}}0 1
;}}1 2
}~~ 
)~~ 
;~~ 
modelBuilder
ÄÄ 
.
ÄÄ 
Entity
ÄÄ 
(
ÄÄ  
$str
ÄÄ  E
,
ÄÄE F
b
ÄÄG H
=>
ÄÄI K
{
ÅÅ 
b
ÇÇ 
.
ÇÇ 
Property
ÇÇ 
<
ÇÇ 
string
ÇÇ %
>
ÇÇ% &
(
ÇÇ& '
$str
ÇÇ' +
)
ÇÇ+ ,
;
ÇÇ, -
b
ÑÑ 
.
ÑÑ 
Property
ÑÑ 
<
ÑÑ 
int
ÑÑ "
>
ÑÑ" #
(
ÑÑ# $
$str
ÑÑ$ 7
)
ÑÑ7 8
;
ÑÑ8 9
b
ÜÜ 
.
ÜÜ 
Property
ÜÜ 
<
ÜÜ 
string
ÜÜ %
>
ÜÜ% &
(
ÜÜ& '
$str
ÜÜ' 9
)
ÜÜ9 :
.
áá  
IsConcurrencyToken
áá +
(
áá+ ,
)
áá, -
;
áá- .
b
ââ 
.
ââ 
Property
ââ 
<
ââ 
string
ââ %
>
ââ% &
(
ââ& '
$str
ââ' .
)
ââ. /
.
ää 
HasAnnotation
ää &
(
ää& '
$str
ää' 2
,
ää2 3
$num
ää4 7
)
ää7 8
;
ää8 9
b
åå 
.
åå 
Property
åå 
<
åå 
bool
åå #
>
åå# $
(
åå$ %
$str
åå% 5
)
åå5 6
;
åå6 7
b
éé 
.
éé 
Property
éé 
<
éé 
bool
éé #
>
éé# $
(
éé$ %
$str
éé% 5
)
éé5 6
;
éé6 7
b
êê 
.
êê 
Property
êê 
<
êê 
DateTimeOffset
êê -
?
êê- .
>
êê. /
(
êê/ 0
$str
êê0 <
)
êê< =
;
êê= >
b
íí 
.
íí 
Property
íí 
<
íí 
string
íí %
>
íí% &
(
íí& '
$str
íí' 8
)
íí8 9
.
ìì 
HasAnnotation
ìì &
(
ìì& '
$str
ìì' 2
,
ìì2 3
$num
ìì4 7
)
ìì7 8
;
ìì8 9
b
ïï 
.
ïï 
Property
ïï 
<
ïï 
string
ïï %
>
ïï% &
(
ïï& '
$str
ïï' ;
)
ïï; <
.
ññ 
HasAnnotation
ññ &
(
ññ& '
$str
ññ' 2
,
ññ2 3
$num
ññ4 7
)
ññ7 8
;
ññ8 9
b
òò 
.
òò 
Property
òò 
<
òò 
string
òò %
>
òò% &
(
òò& '
$str
òò' 5
)
òò5 6
;
òò6 7
b
öö 
.
öö 
Property
öö 
<
öö 
string
öö %
>
öö% &
(
öö& '
$str
öö' 4
)
öö4 5
;
öö5 6
b
úú 
.
úú 
Property
úú 
<
úú 
bool
úú #
>
úú# $
(
úú$ %
$str
úú% ;
)
úú; <
;
úú< =
b
ûû 
.
ûû 
Property
ûû 
<
ûû 
string
ûû %
>
ûû% &
(
ûû& '
$str
ûû' 6
)
ûû6 7
;
ûû7 8
b
†† 
.
†† 
Property
†† 
<
†† 
bool
†† #
>
††# $
(
††$ %
$str
††% 7
)
††7 8
;
††8 9
b
¢¢ 
.
¢¢ 
Property
¢¢ 
<
¢¢ 
string
¢¢ %
>
¢¢% &
(
¢¢& '
$str
¢¢' 1
)
¢¢1 2
.
££ 
HasAnnotation
££ &
(
££& '
$str
££' 2
,
££2 3
$num
££4 7
)
££7 8
;
££8 9
b
•• 
.
•• 
HasKey
•• 
(
•• 
$str
•• !
)
••! "
;
••" #
b
ßß 
.
ßß 
HasIndex
ßß 
(
ßß 
$str
ßß 0
)
ßß0 1
.
®® 
HasName
®®  
(
®®  !
$str
®®! -
)
®®- .
;
®®. /
b
™™ 
.
™™ 
HasIndex
™™ 
(
™™ 
$str
™™ 3
)
™™3 4
.
´´ 
IsUnique
´´ !
(
´´! "
)
´´" #
.
¨¨ 
HasName
¨¨  
(
¨¨  !
$str
¨¨! 0
)
¨¨0 1
;
¨¨1 2
b
ÆÆ 
.
ÆÆ 
ToTable
ÆÆ 
(
ÆÆ 
$str
ÆÆ +
)
ÆÆ+ ,
;
ÆÆ, -
}
ØØ 
)
ØØ 
;
ØØ 
modelBuilder
±± 
.
±± 
Entity
±± 
(
±±  
$str
±±  m
,
±±m n
b
±±o p
=>
±±q s
{
≤≤ 
b
≥≥ 
.
≥≥ 
HasOne
≥≥ 
(
≥≥ 
$str
≥≥ ]
)
≥≥] ^
.
¥¥ 
WithMany
¥¥ !
(
¥¥! "
$str
¥¥" *
)
¥¥* +
.
µµ 
HasForeignKey
µµ &
(
µµ& '
$str
µµ' /
)
µµ/ 0
.
∂∂ 
OnDelete
∂∂ !
(
∂∂! "
DeleteBehavior
∂∂" 0
.
∂∂0 1
Cascade
∂∂1 8
)
∂∂8 9
;
∂∂9 :
}
∑∑ 
)
∑∑ 
;
∑∑ 
modelBuilder
ππ 
.
ππ 
Entity
ππ 
(
ππ  
$str
ππ  m
,
ππm n
b
ππo p
=>
ππq s
{
∫∫ 
b
ªª 
.
ªª 
HasOne
ªª 
(
ªª 
$str
ªª B
)
ªªB C
.
ºº 
WithMany
ºº !
(
ºº! "
$str
ºº" *
)
ºº* +
.
ΩΩ 
HasForeignKey
ΩΩ &
(
ΩΩ& '
$str
ΩΩ' /
)
ΩΩ/ 0
.
ææ 
OnDelete
ææ !
(
ææ! "
DeleteBehavior
ææ" 0
.
ææ0 1
Cascade
ææ1 8
)
ææ8 9
;
ææ9 :
}
øø 
)
øø 
;
øø 
modelBuilder
¡¡ 
.
¡¡ 
Entity
¡¡ 
(
¡¡  
$str
¡¡  m
,
¡¡m n
b
¡¡o p
=>
¡¡q s
{
¬¬ 
b
√√ 
.
√√ 
HasOne
√√ 
(
√√ 
$str
√√ B
)
√√B C
.
ƒƒ 
WithMany
ƒƒ !
(
ƒƒ! "
$str
ƒƒ" *
)
ƒƒ* +
.
≈≈ 
HasForeignKey
≈≈ &
(
≈≈& '
$str
≈≈' /
)
≈≈/ 0
.
∆∆ 
OnDelete
∆∆ !
(
∆∆! "
DeleteBehavior
∆∆" 0
.
∆∆0 1
Cascade
∆∆1 8
)
∆∆8 9
;
∆∆9 :
}
«« 
)
«« 
;
«« 
modelBuilder
…… 
.
…… 
Entity
…… 
(
……  
$str
……  l
,
……l m
b
……n o
=>
……p r
{
   
b
ÀÀ 
.
ÀÀ 
HasOne
ÀÀ 
(
ÀÀ 
$str
ÀÀ ]
)
ÀÀ] ^
.
ÃÃ 
WithMany
ÃÃ !
(
ÃÃ! "
$str
ÃÃ" )
)
ÃÃ) *
.
ÕÕ 
HasForeignKey
ÕÕ &
(
ÕÕ& '
$str
ÕÕ' /
)
ÕÕ/ 0
.
ŒŒ 
OnDelete
ŒŒ !
(
ŒŒ! "
DeleteBehavior
ŒŒ" 0
.
ŒŒ0 1
Cascade
ŒŒ1 8
)
ŒŒ8 9
;
ŒŒ9 :
b
–– 
.
–– 
HasOne
–– 
(
–– 
$str
–– B
)
––B C
.
—— 
WithMany
—— !
(
——! "
$str
——" )
)
——) *
.
““ 
HasForeignKey
““ &
(
““& '
$str
““' /
)
““/ 0
.
”” 
OnDelete
”” !
(
””! "
DeleteBehavior
””" 0
.
””0 1
Cascade
””1 8
)
””8 9
;
””9 :
}
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 	
}
÷÷ 
}◊◊ à	
WC:\Users\jolde\Desktop\TrainManagement\Presentation\Extensions\EmailSenderExtensions.cs
	namespace 	
Presentation
 
. 
Services 
{		 
public

 

static

 
class

 !
EmailSenderExtensions

 -
{ 
public 
static 
Task &
SendEmailConfirmationAsync 5
(5 6
this6 :
IEmailSender; G
emailSenderH S
,S T
stringU [
email\ a
,a b
stringc i
linkj n
)n o
{ 	
return 
emailSender 
. 
SendEmailAsync -
(- .
email. 3
,3 4
$str5 I
,I J
$" H
<Please confirm your account by clicking this link: <a href=' N
{N O
HtmlEncoderO Z
.Z [
Default[ b
.b c
Encodec i
(i j
linkj n
)n o
}o p

'>link</a>p z
"z {
){ |
;| }
} 	
} 
} ›
UC:\Users\jolde\Desktop\TrainManagement\Presentation\Extensions\UrlHelperExtensions.cs
	namespace 	
	Microsoft
 
. 

AspNetCore 
. 
Mvc "
{ 
public		 

static		 
class		 
UrlHelperExtensions		 +
{

 
public 
static 
string !
EmailConfirmationLink 2
(2 3
this3 7

IUrlHelper8 B
	urlHelperC L
,L M
stringN T
userIdU [
,[ \
string] c
coded h
,h i
stringj p
schemeq w
)w x
{ 	
return 
	urlHelper 
. 
Action #
(# $
action 
: 
nameof 
( 
AccountController 0
.0 1
ConfirmEmail1 =
)= >
,> ?

controller 
: 
$str %
,% &
values 
: 
new 
{ 
userId $
,$ %
code& *
}+ ,
,, -
protocol 
: 
scheme  
)  !
;! "
} 	
public 
static 
string %
ResetPasswordCallbackLink 6
(6 7
this7 ;

IUrlHelper< F
	urlHelperG P
,P Q
stringR X
userIdY _
,_ `
stringa g
codeh l
,l m
stringn t
schemeu {
){ |
{ 	
return 
	urlHelper 
. 
Action #
(# $
action 
: 
nameof 
( 
AccountController 0
.0 1
ResetPassword1 >
)> ?
,? @

controller 
: 
$str %
,% &
values 
: 
new 
{ 
userId $
,$ %
code& *
}+ ,
,, -
protocol 
: 
scheme  
)  !
;! "
} 	
} 
} 
fC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\ExternalLoginViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 "
ExternalLoginViewModel		 '
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
} 
} Ú
gC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\ForgotPasswordViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 #
ForgotPasswordViewModel		 (
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ›	
^C:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\LoginViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 
LoginViewModel		 
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Display	 
( 
Name 
= 
$str &
)& '
]' (
public 
bool 

RememberMe 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} â
eC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\LoginWith2faViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 !
LoginWith2faViewModel		 &
{

 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage %
=& '
$str( f
,f g
MinimumLengthh u
=v w
$numx y
)y z
]z {
[ 	
DataType	 
( 
DataType 
. 
Text 
)  
]  !
[ 	
Display	 
( 
Name 
= 
$str ,
), -
]- .
public 
string 
TwoFactorCode #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Display	 
( 
Name 
= 
$str /
)/ 0
]0 1
public 
bool 
RememberMachine #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
bool 

RememberMe 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ‹
nC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\LoginWithRecoveryCodeViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 *
LoginWithRecoveryCodeViewModel		 /
{

 
[ 
Required 
] 
[ 
DataType 
( 
DataType 
. 
Text #
)# $
]$ %
[ 
Display 
( 
Name 
= 
$str +
)+ ,
], -
public 
string 
RecoveryCode &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ©
aC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\RegisterViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 
RegisterViewModel		 "
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
[ 	
Display	 
( 
Name 
= 
$str 
)  
]  !
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* h
,h i
MinimumLengthj w
=x y
$numz {
){ |
]| }
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str "
)" #
]# $
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str *
)* +
]+ ,
[ 	
Compare	 
( 
$str 
, 
ErrorMessage )
=* +
$str, b
)b c
]c d
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} √
fC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\AccountViewModels\ResetPasswordViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
AccountViewModels /
{ 
public		 

class		 "
ResetPasswordViewModel		 '
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* h
,h i
MinimumLengthj w
=x y
$numz {
){ |
]| }
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str *
)* +
]+ ,
[ 	
Compare	 
( 
$str 
, 
ErrorMessage )
=* +
$str, b
)b c
]c d
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
Code 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ∆
MC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ApplicationUser.cs
	namespace 	
Presentation
 
. 
Models 
{ 
public

 

class

 
ApplicationUser

  
:

! "
IdentityUser

# /
{ 
} 
} ö
LC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ErrorViewModel.cs
	namespace 	
Presentation
 
. 
Models 
{ 
public 

class 
ErrorViewModel 
{ 
public 
string 
	RequestId 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
bool		 
ShowRequestId		 !
=>		" $
!		% &
string		& ,
.		, -
IsNullOrEmpty		- :
(		: ;
	RequestId		; D
)		D E
;		E F
}

 
} ≤
fC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\ChangePasswordViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{ 
public		 

class		 #
ChangePasswordViewModel		 (
{

 
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str *
)* +
]+ ,
public 
string 
OldPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* h
,h i
MinimumLengthj w
=x y
$numz {
){ |
]| }
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str &
)& '
]' (
public 
string 
NewPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str .
). /
]/ 0
[ 	
Compare	 
( 
$str 
, 
ErrorMessage  ,
=- .
$str/ i
)i j
]j k
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
StatusMessage #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} 
kC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\EnableAuthenticatorViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{		 
public

 

class

 (
EnableAuthenticatorViewModel

 -
{ 
[ 
Required 
] 
[ 
StringLength 
( 
$num 
, 
ErrorMessage )
=* +
$str, j
,j k
MinimumLengthl y
=z {
$num| }
)} ~
]~ 
[ 
DataType 
( 
DataType 
. 
Text #
)# $
]$ %
[ 
Display 
( 
Name 
= 
$str /
)/ 0
]0 1
public 
string 
Code 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 
ReadOnly 
( 
true 
) 
] 
public 
string 
	SharedKey #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
AuthenticatorUri *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
} 
} Â
fC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\ExternalLoginsViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{		 
public

 

class

 #
ExternalLoginsViewModel

 (
{ 
public 
IList 
< 
UserLoginInfo "
>" #
CurrentLogins$ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
IList 
<  
AuthenticationScheme )
>) *
OtherLogins+ 6
{7 8
get9 <
;< =
set> A
;A B
}C D
public 
bool 
ShowRemoveButton $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
StatusMessage #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} ∏
mC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\GenerateRecoveryCodesViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{ 
public		 

class		 *
GenerateRecoveryCodesViewModel		 /
{

 
public 
string 
[ 
] 
RecoveryCodes %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} ë
]C:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\IndexViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{ 
public		 

class		 
IndexViewModel		 
{

 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
IsEmailConfirmed $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Phone	 
] 
[ 	
Display	 
( 
Name 
= 
$str &
)& '
]' (
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
StatusMessage #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} •
cC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\RemoveLoginViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{ 
public		 

class		  
RemoveLoginViewModel		 %
{

 
public 
string 
LoginProvider #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
ProviderKey !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} »
cC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\SetPasswordViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{ 
public		 

class		  
SetPasswordViewModel		 %
{

 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* h
,h i
MinimumLengthj w
=x y
$numz {
){ |
]| }
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str &
)& '
]' (
public 
string 
NewPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str .
). /
]/ 0
[ 	
Compare	 
( 
$str 
, 
ErrorMessage  ,
=- .
$str/ i
)i j
]j k
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
StatusMessage #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} ﬂ
oC:\Users\jolde\Desktop\TrainManagement\Presentation\Models\ManageViewModels\TwoFactorAuthenticationViewModel.cs
	namespace 	
Presentation
 
. 
Models 
. 
ManageViewModels .
{ 
public		 

class		 ,
 TwoFactorAuthenticationViewModel		 1
{

 
public 
bool 
HasAuthenticator $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
RecoveryCodesLeft $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
bool 
Is2faEnabled  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Ù
DC:\Users\jolde\Desktop\TrainManagement\Presentation\PaginatedList.cs
	namespace 	
Presentation
 
{ 
public		 

class		 
PaginatedList		 
<		 
T		  
>		  !
:		" #
List		$ (
<		( )
T		) *
>		* +
{

 
public 
int 
	PageIndex 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
int 

TotalPages 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
PaginatedList 
( 
List !
<! "
T" #
># $
items% *
,* +
int, /
count0 5
,5 6
int7 :
	pageIndex; D
,D E
intF I
pageSizeJ R
)R S
{ 	
	PageIndex 
= 
	pageIndex !
;! "

TotalPages 
= 
( 
int 
) 
Math "
." #
Ceiling# *
(* +
count+ 0
/1 2
(3 4
double4 :
): ;
pageSize; C
)C D
;D E
this 
. 
AddRange 
( 
items 
)  
;  !
} 	
public 
bool 
HasPreviousPage #
{ 	
get 
{ 
return 
( 
	PageIndex !
>" #
$num$ %
)% &
;& '
} 
} 	
public 
bool 
HasNextPage 
{ 	
get 
{   
return!! 
(!! 
	PageIndex!! !
<!!" #

TotalPages!!$ .
)!!. /
;!!/ 0
}"" 
}## 	
public%% 
static%% 
async%% 
Task%%  
<%%  !
PaginatedList%%! .
<%%. /
T%%/ 0
>%%0 1
>%%1 2
CreateAsync%%3 >
(%%> ?

IQueryable%%? I
<%%I J
T%%J K
>%%K L
source%%M S
,%%S T
int%%U X
	pageIndex%%Y b
,%%b c
int%%d g
pageSize%%h p
)%%p q
{&& 	
var'' 
count'' 
='' 
await'' 
source'' $
.''$ %

CountAsync''% /
(''/ 0
)''0 1
;''1 2
var(( 
items(( 
=(( 
await(( 
source(( $
.(($ %
Skip((% )
((() *
(((* +
	pageIndex((+ 4
-((5 6
$num((7 8
)((8 9
*((: ;
pageSize((< D
)((D E
.((E F
Take((F J
(((J K
pageSize((K S
)((S T
.((T U
ToListAsync((U `
(((` a
)((a b
;((b c
return)) 
new)) 
PaginatedList)) $
<))$ %
T))% &
>))& '
())' (
items))( -
,))- .
count))/ 4
,))4 5
	pageIndex))6 ?
,))? @
pageSize))A I
)))I J
;))J K
}** 	
}++ 
},, Õ
>C:\Users\jolde\Desktop\TrainManagement\Presentation\Program.cs
	namespace 	
Presentation
 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
BuildWebHost 
( 
args 
) 
. 
Run "
(" #
)# $
;$ %
} 	
public 
static 
IWebHost 
BuildWebHost +
(+ ,
string, 2
[2 3
]3 4
args5 9
)9 :
=>; =
WebHost 
.  
CreateDefaultBuilder (
(( )
args) -
)- .
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
. 
Build 
( 
) 
; 
} 
} ∂
KC:\Users\jolde\Desktop\TrainManagement\Presentation\Services\EmailSender.cs
	namespace 	
Presentation
 
. 
Services 
{ 
public

 

class

 
EmailSender

 
:

 
IEmailSender

 +
{ 
public 
Task 
SendEmailAsync "
(" #
string# )
email* /
,/ 0
string1 7
subject8 ?
,? @
stringA G
messageH O
)O P
{ 	
return 
Task 
. 
CompletedTask %
;% &
} 	
} 
} ë
LC:\Users\jolde\Desktop\TrainManagement\Presentation\Services\IEmailSender.cs
	namespace 	
Presentation
 
. 
Services 
{ 
public 

	interface 
IEmailSender !
{		 
Task

 
SendEmailAsync

 
(

 
string

 "
email

# (
,

( )
string

* 0
subject

1 8
,

8 9
string

: @
message

A H
)

H I
;

I J
} 
} ·/
>C:\Users\jolde\Desktop\TrainManagement\Presentation\Startup.cs
	namespace 	
Presentation
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
,3 4
IHostingEnvironment5 H
envI L
)L M
{ 	
Configuration 
= 
configuration )
;) *
var 
builder 
= 
new  
ConfigurationBuilder 2
(2 3
)3 4
;4 5
if 
( 
env 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
builder 
. 
AddUserSecrets &
<& '
Startup' .
>. /
(/ 0
)0 1
;1 2
} 
} 	
public   
IConfiguration   
Configuration   +
{  , -
get  . 1
;  1 2
}  3 4
public## 
void## 
ConfigureServices## %
(##% &
IServiceCollection##& 8
services##9 A
)##A B
{$$ 	
services%% 
.%% 
AddTransient%% !
<%%! "
IDatabaseContext%%" 2
,%%2 3
DatabaseContext%%4 C
>%%C D
(%%D E
)%%E F
;%%F G
services'' 
.'' 
AddTransient'' !
(''! "
typeof''" (
(''( )
IRepository'') 4
<''4 5
>''5 6
)''6 7
,''7 8
typeof''9 ?
(''? @
GenericRepository''@ Q
<''Q R
>''R S
)''S T
)''T U
;''U V
services** 
.** 
AddDbContext** !
<**! " 
ApplicationDbContext**" 6
>**6 7
(**7 8
options**8 ?
=>**@ B
options++ 
.++ 
UseSqlServer++ $
(++$ %
Configuration++% 2
.++2 3
GetConnectionString++3 F
(++F G
$str++G Z
)++Z [
)++[ \
)++\ ]
;++] ^
var-- 
connectionString--  
=--! "
$str--# n
;--n o
services.. 
... 
AddDbContext.. !
<..! "
DatabaseContext.." 1
>..1 2
(..2 3
option..3 9
=>..: <
option..= C
...C D
UseSqlServer..D P
(..P Q
connectionString..Q a
)..a b
)..b c
;..c d
services// 
.// 
AddMvc// 
(// 
)// 
;// 
services11 
.11 
AddIdentity11  
<11  !
ApplicationUser11! 0
,110 1
IdentityRole112 >
>11> ?
(11? @
)11@ A
.22 $
AddEntityFrameworkStores22 )
<22) * 
ApplicationDbContext22* >
>22> ?
(22? @
)22@ A
.33 $
AddDefaultTokenProviders33 )
(33) *
)33* +
;33+ ,
services55 
.55 
AddAuthentication55 &
(55& '
)55' (
.55( )
AddFacebook55) 4
(554 5
facebookOptions555 D
=>55E G
{66 
facebookOptions77 
.77  
AppId77  %
=77& '
Configuration77( 5
[775 6
$str776 U
]77U V
;77V W
facebookOptions88 
.88  
	AppSecret88  )
=88* +
Configuration88, 9
[889 :
$str88: ]
]88] ^
;88^ _
}99 
)99 
;99 
services;; 
.;; 
	Configure;; 
<;; 

MvcOptions;; )
>;;) *
(;;* +
options;;+ 2
=>;;3 5
{<< 
options== 
.== 
Filters== 
.==  
Add==  #
(==# $
new==$ '!
RequireHttpsAttribute==( =
(=== >
)==> ?
)==? @
;==@ A
}>> 
)>> 
;>> 
servicesAA 
.AA 
AddTransientAA !
<AA! "
IEmailSenderAA" .
,AA. /
EmailSenderAA0 ;
>AA; <
(AA< =
)AA= >
;AA> ?
servicesCC 
.CC 
AddMvcCC 
(CC 
)CC 
;CC 
}EE 	
publicHH 
voidHH 
	ConfigureHH 
(HH 
IApplicationBuilderHH 1
appHH2 5
,HH5 6
IHostingEnvironmentHH7 J
envHHK N
)HHN O
{II 	
ifJJ 
(JJ 
envJJ 
.JJ 
IsDevelopmentJJ !
(JJ! "
)JJ" #
)JJ# $
{KK 
appLL 
.LL %
UseDeveloperExceptionPageLL -
(LL- .
)LL. /
;LL/ 0
appMM 
.MM 
UseBrowserLinkMM "
(MM" #
)MM# $
;MM$ %
appNN 
.NN  
UseDatabaseErrorPageNN (
(NN( )
)NN) *
;NN* +
}OO 
elsePP 
{QQ 
appRR 
.RR 
UseExceptionHandlerRR '
(RR' (
$strRR( 5
)RR5 6
;RR6 7
}SS 
appUU 
.UU 
UseStaticFilesUU 
(UU 
)UU  
;UU  !
appWW 
.WW 
UseAuthenticationWW !
(WW! "
)WW" #
;WW# $
appYY 
.YY 
UseMvcYY 
(YY 
routesYY 
=>YY  
{ZZ 
routes[[ 
.[[ 
MapRoute[[ 
([[  
name\\ 
:\\ 
$str\\ #
,\\# $
template]] 
:]] 
$str]] F
)]]F G
;]]G H
}^^ 
)^^ 
;^^ 
}`` 	
}aa 
}bb ‚
RC:\Users\jolde\Desktop\TrainManagement\Presentation\Views\Manage\ManageNavPages.cs
	namespace 	
Presentation
 
. 
Views 
. 
Manage #
{		 
public

 

static

 
class

 
ManageNavPages

 &
{ 
public 
static 
string 
ActivePageKey *
=>+ -
$str. :
;: ;
public 
static 
string 
Index "
=># %
$str& -
;- .
public 
static 
string 
ChangePassword +
=>, .
$str/ ?
;? @
public 
static 
string 
ExternalLogins +
=>, .
$str/ ?
;? @
public 
static 
string #
TwoFactorAuthentication 4
=>5 7
$str8 Q
;Q R
public 
static 
string 
IndexNavClass *
(* +
ViewContext+ 6
viewContext7 B
)B C
=>D F
PageNavClassG S
(S T
viewContextT _
,_ `
Indexa f
)f g
;g h
public 
static 
string "
ChangePasswordNavClass 3
(3 4
ViewContext4 ?
viewContext@ K
)K L
=>M O
PageNavClassP \
(\ ]
viewContext] h
,h i
ChangePasswordj x
)x y
;y z
public 
static 
string "
ExternalLoginsNavClass 3
(3 4
ViewContext4 ?
viewContext@ K
)K L
=>M O
PageNavClassP \
(\ ]
viewContext] h
,h i
ExternalLoginsj x
)x y
;y z
public 
static 
string +
TwoFactorAuthenticationNavClass <
(< =
ViewContext= H
viewContextI T
)T U
=>V X
PageNavClassY e
(e f
viewContextf q
,q r$
TwoFactorAuthentication	s ä
)
ä ã
;
ã å
public 
static 
string 
PageNavClass )
() *
ViewContext* 5
viewContext6 A
,A B
stringC I
pageJ N
)N O
{ 	
var   

activePage   
=   
viewContext   (
.  ( )
ViewData  ) 1
[  1 2
$str  2 >
]  > ?
as  @ B
string  C I
;  I J
return!! 
string!! 
.!! 
Equals!!  
(!!  !

activePage!!! +
,!!+ ,
page!!- 1
,!!1 2
StringComparison!!3 C
.!!C D
OrdinalIgnoreCase!!D U
)!!U V
?!!W X
$str!!Y a
:!!b c
null!!d h
;!!h i
}"" 	
public$$ 
static$$ 
void$$ 
AddActivePage$$ (
($$( )
this$$) -
ViewDataDictionary$$. @
viewData$$A I
,$$I J
string$$K Q

activePage$$R \
)$$\ ]
=>$$^ `
viewData$$a i
[$$i j
ActivePageKey$$j w
]$$w x
=$$y z

activePage	$${ Ö
;
$$Ö Ü
}%% 
}&& 